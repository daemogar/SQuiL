//HintName: TestCase.Input2VariableDataContext.Input2VariableDataContext.g.cs
// <auto-generated />

#nullable enable

using Microsoft.Data.SqlClient;

using SQuiL;

namespace TestCase;

partial class Input2VariableDataContext : SQuiLBaseDataContext
{
	public async Task<Input2VariableResponse> ProcessInput2VariableAsync(
		Input2VariableRequest request,
		CancellationToken cancellationToken = default!)
	{
		var builder = ConnectionStringBuilder("SQuiLDatabase");
		using SqlConnection connection = new(builder.ConnectionString);
		var command = connection.CreateCommand();
		command.CommandText = Query();
		command.Parameters.AddRange(new SqlParameter[]
		{
			new("EnvironmentName", System.Data.SqlDbType.VarChar, EnvironmentName.Length) { Value = EnvironmentName }, 
			new("Debug", System.Data.SqlDbType.Bit) { Value = EnvironmentName != "Production" }, 
		});
		
		await connection.OpenAsync(cancellationToken);
		
		await command.ExecuteNonQueryAsync(cancellationToken)
		
		return new();
		
		string Query() => $"""
		Use [{builder.InitialCatalog}];
		
		Select 1;
		
		""";
	}
}
