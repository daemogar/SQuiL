{
  Diagnostics: [
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TestCase :: TwoQueryDataContextDataContext :: ConnectionStringTwoQueryDataContext1 :: TwoQueryDataContext1 :: Use BIWarehouse; Select 1,
      Message: TestCase :: TwoQueryDataContextDataContext :: ConnectionStringTwoQueryDataContext1 :: TwoQueryDataContext1 :: Use BIWarehouse; Select 1,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: CodeBlock { CodeType = USING, DatabaseType = Token { Type = IDENTIFIER, Offset = 4, Value = BIWarehouse, Original = BIWarehouse }, Name = BIWarehouse, DefaultValue = , IsTable = False, IsRequired = True, IsNullable = True, Size = , Table =  },
      Message: CodeBlock { CodeType = USING, DatabaseType = Token { Type = IDENTIFIER, Offset = 4, Value = BIWarehouse, Original = BIWarehouse }, Name = BIWarehouse, DefaultValue = , IsTable = False, IsRequired = True, IsNullable = True, Size = , Table =  },
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: CodeBlock { CodeType = BODY, DatabaseType = Token { Type = BODY, Offset = 18, Value = Select 1 , Original = Select 1 }, Name = Select 1 , DefaultValue = , IsTable = False, IsRequired = True, IsNullable = True, Size = , Table =  },
      Message: CodeBlock { CodeType = BODY, DatabaseType = Token { Type = BODY, Offset = 18, Value = Select 1 , Original = Select 1 }, Name = Select 1 , DefaultValue = , IsTable = False, IsRequired = True, IsNullable = True, Size = , Table =  },
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: KEYWORD_USE => ,
      Message: KEYWORD_USE => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: IDENTIFIER => BIWarehouse,
      Message: IDENTIFIER => BIWarehouse,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: BODY => Select 1,
      Message: BODY => Select 1,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TestCase :: TwoQueryDataContextDataContext :: ConnectionStringTwoQueryDataContext2 :: TwoQueryDataContext2 :: Declare		@PersonID varchar(10), 			@Debug bit = 1;  Set	@PersonID = '0300996';  Declare	@Return_Participation table( 	SectionID varchar(20), 	PersonID varchar(10), 	ProfessorID varchar(10), 	TermCode varchar(10), 	CompletedDate datetime );  Declare	@Return_Override table( 	SectionID varchar(20), 	TermCode varchar(10), 	CourseCode varchar(20), 	BeginDate datetime, 	EndDate datetime );  Use DataRepositoryTest;  Insert Into @Return_Participation Select * From ( Select		--pv.ElementId As ElementID, 			Max(Iif(pv.PropertyName = 'ParticipationSectionId', PropertyValue, Null)) as SectionID, 			Max(Iif(pv.PropertyName = 'ParticipationStudentId', PropertyValue, Null)) as PersonID, 			Max(Iif(pv.PropertyName = 'ParticipationTeacherId', PropertyValue, Null)) as ProfessorID, 			Max(Iif(pv.PropertyName = 'ParticipationTerm', PropertyValue, Null)) as TermCode, 			Max(Iif(pv.PropertyName = 'ParticipationCompletedOn', Cast(PropertyValue As datetime), Null)) as CompletedDate From		CourseEvaluation_PropertyValues pv 			Inner Join ( 				Select		ElementId 				From		CourseEvaluation_PropertyValues 				Where		PropertyName = 'Tag' 							And PropertyValue = 'Participation' 			) tags 				On tags.ElementId = pv.ElementId Group By	pv.ElementId ) list Where PersonID = @PersonID;  Insert Into @Return_Override Select		Max(Iif(pv.PropertyName = 'SectionDateSectionId', PropertyValue, Null)) as SectionID, 			Max(Iif(pv.PropertyName = 'SectionDateTerm', PropertyValue, Null)) as TermCode, 			Max(Iif(pv.PropertyName = 'SectionDateDescription', PropertyValue, Null)) as CourseCode, 			Max(Iif(pv.PropertyName = 'SectionDateEvaluationBeginDate', Cast(PropertyValue As date), Null)) as BeginDate, 			Max(Iif(pv.PropertyName = 'SectionDateEvaluationEndDate', Cast(PropertyValue As date), Null)) as EndDate From		CourseEvaluation_PropertyValues pv 			Inner Join ( 				Select		ElementId 				From		CourseEvaluation_PropertyValues 				Where		PropertyName = 'Tag' 							And PropertyValue = 'SectionDate' 			) tags 				On tags.ElementId = pv.ElementId Group By	pv.ElementId  Select * From @Return_Participation; Select * From @Return_Override;  /*  ParticipationCompletedOn ParticipationSectionId ParticipationStudentId ParticipationTeacherId ParticipationTerm  */,
      Message: TestCase :: TwoQueryDataContextDataContext :: ConnectionStringTwoQueryDataContext2 :: TwoQueryDataContext2 :: Declare		@PersonID varchar(10), 			@Debug bit = 1;  Set	@PersonID = '0300996';  Declare	@Return_Participation table( 	SectionID varchar(20), 	PersonID varchar(10), 	ProfessorID varchar(10), 	TermCode varchar(10), 	CompletedDate datetime );  Declare	@Return_Override table( 	SectionID varchar(20), 	TermCode varchar(10), 	CourseCode varchar(20), 	BeginDate datetime, 	EndDate datetime );  Use DataRepositoryTest;  Insert Into @Return_Participation Select * From ( Select		--pv.ElementId As ElementID, 			Max(Iif(pv.PropertyName = 'ParticipationSectionId', PropertyValue, Null)) as SectionID, 			Max(Iif(pv.PropertyName = 'ParticipationStudentId', PropertyValue, Null)) as PersonID, 			Max(Iif(pv.PropertyName = 'ParticipationTeacherId', PropertyValue, Null)) as ProfessorID, 			Max(Iif(pv.PropertyName = 'ParticipationTerm', PropertyValue, Null)) as TermCode, 			Max(Iif(pv.PropertyName = 'ParticipationCompletedOn', Cast(PropertyValue As datetime), Null)) as CompletedDate From		CourseEvaluation_PropertyValues pv 			Inner Join ( 				Select		ElementId 				From		CourseEvaluation_PropertyValues 				Where		PropertyName = 'Tag' 							And PropertyValue = 'Participation' 			) tags 				On tags.ElementId = pv.ElementId Group By	pv.ElementId ) list Where PersonID = @PersonID;  Insert Into @Return_Override Select		Max(Iif(pv.PropertyName = 'SectionDateSectionId', PropertyValue, Null)) as SectionID, 			Max(Iif(pv.PropertyName = 'SectionDateTerm', PropertyValue, Null)) as TermCode, 			Max(Iif(pv.PropertyName = 'SectionDateDescription', PropertyValue, Null)) as CourseCode, 			Max(Iif(pv.PropertyName = 'SectionDateEvaluationBeginDate', Cast(PropertyValue As date), Null)) as BeginDate, 			Max(Iif(pv.PropertyName = 'SectionDateEvaluationEndDate', Cast(PropertyValue As date), Null)) as EndDate From		CourseEvaluation_PropertyValues pv 			Inner Join ( 				Select		ElementId 				From		CourseEvaluation_PropertyValues 				Where		PropertyName = 'Tag' 							And PropertyValue = 'SectionDate' 			) tags 				On tags.ElementId = pv.ElementId Group By	pv.ElementId  Select * From @Return_Participation; Select * From @Return_Override;  /*  ParticipationCompletedOn ParticipationSectionId ParticipationStudentId ParticipationTeacherId ParticipationTerm  */,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: CodeBlock { CodeType = INPUT_ARGUMENT, DatabaseType = Token { Type = TYPE_STRING, Offset = 19, Value = PersonID, Original = @PersonID varchar(10) }, Name = PersonID, DefaultValue = , IsTable = False, IsRequired = True, IsNullable = True, Size = 10, Table =  },
      Message: CodeBlock { CodeType = INPUT_ARGUMENT, DatabaseType = Token { Type = TYPE_STRING, Offset = 19, Value = PersonID, Original = @PersonID varchar(10) }, Name = PersonID, DefaultValue = , IsTable = False, IsRequired = True, IsNullable = True, Size = 10, Table =  },
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: CodeBlock { CodeType = INPUT_ARGUMENT, DatabaseType = Token { Type = TYPE_BOOLEAN, Offset = 43, Value = , Original = @Debug bit }, Name = Debug, DefaultValue = 1, IsTable = False, IsRequired = False, IsNullable = False, Size = , Table =  },
      Message: CodeBlock { CodeType = INPUT_ARGUMENT, DatabaseType = Token { Type = TYPE_BOOLEAN, Offset = 43, Value = , Original = @Debug bit }, Name = Debug, DefaultValue = 1, IsTable = False, IsRequired = False, IsNullable = False, Size = , Table =  },
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: CodeBlock { CodeType = OUTPUT_TABLE, DatabaseType = Token { Type = TYPE_TABLE, Offset = 85, Value = Participation, Original = @Return_Participation table }, Name = Participation, DefaultValue = , IsTable = True, IsRequired = False, IsNullable = False, Size = , Table = System.Collections.Generic.List`1[SquilParser.SourceGenerator.Parser.CodeItem] },
      Message: CodeBlock { CodeType = OUTPUT_TABLE, DatabaseType = Token { Type = TYPE_TABLE, Offset = 85, Value = Participation, Original = @Return_Participation table }, Name = Participation, DefaultValue = , IsTable = True, IsRequired = False, IsNullable = False, Size = , Table = System.Collections.Generic.List`1[SquilParser.SourceGenerator.Parser.CodeItem] },
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: CodeBlock { CodeType = OUTPUT_TABLE, DatabaseType = Token { Type = TYPE_TABLE, Offset = 254, Value = Override, Original = @Return_Override table }, Name = Override, DefaultValue = , IsTable = True, IsRequired = False, IsNullable = False, Size = , Table = System.Collections.Generic.List`1[SquilParser.SourceGenerator.Parser.CodeItem] },
      Message: CodeBlock { CodeType = OUTPUT_TABLE, DatabaseType = Token { Type = TYPE_TABLE, Offset = 254, Value = Override, Original = @Return_Override table }, Name = Override, DefaultValue = , IsTable = True, IsRequired = False, IsNullable = False, Size = , Table = System.Collections.Generic.List`1[SquilParser.SourceGenerator.Parser.CodeItem] },
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: CodeBlock { CodeType = USING, DatabaseType = Token { Type = IDENTIFIER, Offset = 413, Value = DataRepositoryTest, Original = DataRepositoryTest }, Name = DataRepositoryTest, DefaultValue = , IsTable = False, IsRequired = True, IsNullable = True, Size = , Table =  },
      Message: CodeBlock { CodeType = USING, DatabaseType = Token { Type = IDENTIFIER, Offset = 413, Value = DataRepositoryTest, Original = DataRepositoryTest }, Name = DataRepositoryTest, DefaultValue = , IsTable = False, IsRequired = True, IsNullable = True, Size = , Table =  },
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: CodeBlock { CodeType = BODY, DatabaseType = Token { Type = BODY, Offset = 436, Value = Insert Into @Return_Participation(SectionID, PersonID, ProfessorID, TermCode, CompletedDate) Select * From ( Select		--pv.ElementId As ElementID, 			Max(Iif(pv.PropertyName = 'ParticipationSectionId', PropertyValue, Null)) as SectionID, 			Max(Iif(pv.PropertyName = 'ParticipationStudentId', PropertyValue, Null)) as PersonID, 			Max(Iif(pv.PropertyName = 'ParticipationTeacherId', PropertyValue, Null)) as ProfessorID, 			Max(Iif(pv.PropertyName = 'ParticipationTerm', PropertyValue, Null)) as TermCode, 			Max(Iif(pv.PropertyName = 'ParticipationCompletedOn', Cast(PropertyValue As datetime), Null)) as CompletedDate From		CourseEvaluation_PropertyValues pv 			Inner Join ( 				Select		ElementId 				From		CourseEvaluation_PropertyValues 				Where		PropertyName = 'Tag' 							And PropertyValue = 'Participation' 			) tags 				On tags.ElementId = pv.ElementId Group By	pv.ElementId ) list Where PersonID = @PersonID;  Insert Into @Return_Override(SectionID, TermCode, CourseCode, BeginDate, EndDate) Select		Max(Iif(pv.PropertyName = 'SectionDateSectionId', PropertyValue, Null)) as SectionID, 			Max(Iif(pv.PropertyName = 'SectionDateTerm', PropertyValue, Null)) as TermCode, 			Max(Iif(pv.PropertyName = 'SectionDateDescription', PropertyValue, Null)) as CourseCode, 			Max(Iif(pv.PropertyName = 'SectionDateEvaluationBeginDate', Cast(PropertyValue As date), Null)) as BeginDate, 			Max(Iif(pv.PropertyName = 'SectionDateEvaluationEndDate', Cast(PropertyValue As date), Null)) as EndDate From		CourseEvaluation_PropertyValues pv 			Inner Join ( 				Select		ElementId 				From		CourseEvaluation_PropertyValues 				Where		PropertyName = 'Tag' 							And PropertyValue = 'SectionDate' 			) tags 				On tags.ElementId = pv.ElementId Group By	pv.ElementId  Select * From @Return_Participation; Select * From @Return_Override;  /*  ParticipationCompletedOn ParticipationSectionId ParticipationStudentId ParticipationTeacherId ParticipationTerm  */ , Original = Insert Into @Return_Participation Select * From ( Select		--pv.ElementId As ElementID, 			Max(Iif(pv.PropertyName = 'ParticipationSectionId', PropertyValue, Null)) as SectionID, 			Max(Iif(pv.PropertyName = 'ParticipationStudentId', PropertyValue, Null)) as PersonID, 			Max(Iif(pv.PropertyName = 'ParticipationTeacherId', PropertyValue, Null)) as ProfessorID, 			Max(Iif(pv.PropertyName = 'ParticipationTerm', PropertyValue, Null)) as TermCode, 			Max(Iif(pv.PropertyName = 'ParticipationCompletedOn', Cast(PropertyValue As datetime), Null)) as CompletedDate From		CourseEvaluation_PropertyValues pv 			Inner Join ( 				Select		ElementId 				From		CourseEvaluation_PropertyValues 				Where		PropertyName = 'Tag' 							And PropertyValue = 'Participation' 			) tags 				On tags.ElementId = pv.ElementId Group By	pv.ElementId ) list Where PersonID = @PersonID;  Insert Into @Return_Override Select		Max(Iif(pv.PropertyName = 'SectionDateSectionId', PropertyValue, Null)) as SectionID, 			Max(Iif(pv.PropertyName = 'SectionDateTerm', PropertyValue, Null)) as TermCode, 			Max(Iif(pv.PropertyName = 'SectionDateDescription', PropertyValue, Null)) as CourseCode, 			Max(Iif(pv.PropertyName = 'SectionDateEvaluationBeginDate', Cast(PropertyValue As date), Null)) as BeginDate, 			Max(Iif(pv.PropertyName = 'SectionDateEvaluationEndDate', Cast(PropertyValue As date), Null)) as EndDate From		CourseEvaluation_PropertyValues pv 			Inner Join ( 				Select		ElementId 				From		CourseEvaluation_PropertyValues 				Where		PropertyName = 'Tag' 							And PropertyValue = 'SectionDate' 			) tags 				On tags.ElementId = pv.ElementId Group By	pv.ElementId  Select * From @Return_Participation; Select * From @Return_Override;  /*  ParticipationCompletedOn ParticipationSectionId ParticipationStudentId ParticipationTeacherId ParticipationTerm  */ }, Name = Insert Into @Return_Participation(SectionID, PersonID, ProfessorID, TermCode, CompletedDate) Select * From ( Select		--pv.ElementId As ElementID, 			Max(Iif(pv.PropertyName = 'ParticipationSectionId', PropertyValue, Null)) as SectionID, 			Max(Iif(pv.PropertyName = 'ParticipationStudentId', PropertyValue, Null)) as PersonID, 			Max(Iif(pv.PropertyName = 'ParticipationTeacherId', PropertyValue, Null)) as ProfessorID, 			Max(Iif(pv.PropertyName = 'ParticipationTerm', PropertyValue, Null)) as TermCode, 			Max(Iif(pv.PropertyName = 'ParticipationCompletedOn', Cast(PropertyValue As datetime), Null)) as CompletedDate From		CourseEvaluation_PropertyValues pv 			Inner Join ( 				Select		ElementId 				From		CourseEvaluation_PropertyValues 				Where		PropertyName = 'Tag' 							And PropertyValue = 'Participation' 			) tags 				On tags.ElementId = pv.ElementId Group By	pv.ElementId ) list Where PersonID = @PersonID;  Insert Into @Return_Override(SectionID, TermCode, CourseCode, BeginDate, EndDate) Select		Max(Iif(pv.PropertyName = 'SectionDateSectionId', PropertyValue, Null)) as SectionID, 			Max(Iif(pv.PropertyName = 'SectionDateTerm', PropertyValue, Null)) as TermCode, 			Max(Iif(pv.PropertyName = 'SectionDateDescription', PropertyValue, Null)) as CourseCode, 			Max(Iif(pv.PropertyName = 'SectionDateEvaluationBeginDate', Cast(PropertyValue As date), Null)) as BeginDate, 			Max(Iif(pv.PropertyName = 'SectionDateEvaluationEndDate', Cast(PropertyValue As date), Null)) as EndDate From		CourseEvaluation_PropertyValues pv 			Inner Join ( 				Select		ElementId 				From		CourseEvaluation_PropertyValues 				Where		PropertyName = 'Tag' 							And PropertyValue = 'SectionDate' 			) tags 				On tags.ElementId = pv.ElementId Group By	pv.ElementId  Select * From @Return_Participation; Select * From @Return_Override;  /*  ParticipationCompletedOn ParticipationSectionId ParticipationStudentId ParticipationTeacherId ParticipationTerm  */ , DefaultValue = , IsTable = False, IsRequired = True, IsNullable = True, Size = , Table =  },
      Message: CodeBlock { CodeType = BODY, DatabaseType = Token { Type = BODY, Offset = 436, Value = Insert Into @Return_Participation(SectionID, PersonID, ProfessorID, TermCode, CompletedDate) Select * From ( Select		--pv.ElementId As ElementID, 			Max(Iif(pv.PropertyName = 'ParticipationSectionId', PropertyValue, Null)) as SectionID, 			Max(Iif(pv.PropertyName = 'ParticipationStudentId', PropertyValue, Null)) as PersonID, 			Max(Iif(pv.PropertyName = 'ParticipationTeacherId', PropertyValue, Null)) as ProfessorID, 			Max(Iif(pv.PropertyName = 'ParticipationTerm', PropertyValue, Null)) as TermCode, 			Max(Iif(pv.PropertyName = 'ParticipationCompletedOn', Cast(PropertyValue As datetime), Null)) as CompletedDate From		CourseEvaluation_PropertyValues pv 			Inner Join ( 				Select		ElementId 				From		CourseEvaluation_PropertyValues 				Where		PropertyName = 'Tag' 							And PropertyValue = 'Participation' 			) tags 				On tags.ElementId = pv.ElementId Group By	pv.ElementId ) list Where PersonID = @PersonID;  Insert Into @Return_Override(SectionID, TermCode, CourseCode, BeginDate, EndDate) Select		Max(Iif(pv.PropertyName = 'SectionDateSectionId', PropertyValue, Null)) as SectionID, 			Max(Iif(pv.PropertyName = 'SectionDateTerm', PropertyValue, Null)) as TermCode, 			Max(Iif(pv.PropertyName = 'SectionDateDescription', PropertyValue, Null)) as CourseCode, 			Max(Iif(pv.PropertyName = 'SectionDateEvaluationBeginDate', Cast(PropertyValue As date), Null)) as BeginDate, 			Max(Iif(pv.PropertyName = 'SectionDateEvaluationEndDate', Cast(PropertyValue As date), Null)) as EndDate From		CourseEvaluation_PropertyValues pv 			Inner Join ( 				Select		ElementId 				From		CourseEvaluation_PropertyValues 				Where		PropertyName = 'Tag' 							And PropertyValue = 'SectionDate' 			) tags 				On tags.ElementId = pv.ElementId Group By	pv.ElementId  Select * From @Return_Participation; Select * From @Return_Override;  /*  ParticipationCompletedOn ParticipationSectionId ParticipationStudentId ParticipationTeacherId ParticipationTerm  */ , Original = Insert Into @Return_Participation Select * From ( Select		--pv.ElementId As ElementID, 			Max(Iif(pv.PropertyName = 'ParticipationSectionId', PropertyValue, Null)) as SectionID, 			Max(Iif(pv.PropertyName = 'ParticipationStudentId', PropertyValue, Null)) as PersonID, 			Max(Iif(pv.PropertyName = 'ParticipationTeacherId', PropertyValue, Null)) as ProfessorID, 			Max(Iif(pv.PropertyName = 'ParticipationTerm', PropertyValue, Null)) as TermCode, 			Max(Iif(pv.PropertyName = 'ParticipationCompletedOn', Cast(PropertyValue As datetime), Null)) as CompletedDate From		CourseEvaluation_PropertyValues pv 			Inner Join ( 				Select		ElementId 				From		CourseEvaluation_PropertyValues 				Where		PropertyName = 'Tag' 							And PropertyValue = 'Participation' 			) tags 				On tags.ElementId = pv.ElementId Group By	pv.ElementId ) list Where PersonID = @PersonID;  Insert Into @Return_Override Select		Max(Iif(pv.PropertyName = 'SectionDateSectionId', PropertyValue, Null)) as SectionID, 			Max(Iif(pv.PropertyName = 'SectionDateTerm', PropertyValue, Null)) as TermCode, 			Max(Iif(pv.PropertyName = 'SectionDateDescription', PropertyValue, Null)) as CourseCode, 			Max(Iif(pv.PropertyName = 'SectionDateEvaluationBeginDate', Cast(PropertyValue As date), Null)) as BeginDate, 			Max(Iif(pv.PropertyName = 'SectionDateEvaluationEndDate', Cast(PropertyValue As date), Null)) as EndDate From		CourseEvaluation_PropertyValues pv 			Inner Join ( 				Select		ElementId 				From		CourseEvaluation_PropertyValues 				Where		PropertyName = 'Tag' 							And PropertyValue = 'SectionDate' 			) tags 				On tags.ElementId = pv.ElementId Group By	pv.ElementId  Select * From @Return_Participation; Select * From @Return_Override;  /*  ParticipationCompletedOn ParticipationSectionId ParticipationStudentId ParticipationTeacherId ParticipationTerm  */ }, Name = Insert Into @Return_Participation(SectionID, PersonID, ProfessorID, TermCode, CompletedDate) Select * From ( Select		--pv.ElementId As ElementID, 			Max(Iif(pv.PropertyName = 'ParticipationSectionId', PropertyValue, Null)) as SectionID, 			Max(Iif(pv.PropertyName = 'ParticipationStudentId', PropertyValue, Null)) as PersonID, 			Max(Iif(pv.PropertyName = 'ParticipationTeacherId', PropertyValue, Null)) as ProfessorID, 			Max(Iif(pv.PropertyName = 'ParticipationTerm', PropertyValue, Null)) as TermCode, 			Max(Iif(pv.PropertyName = 'ParticipationCompletedOn', Cast(PropertyValue As datetime), Null)) as CompletedDate From		CourseEvaluation_PropertyValues pv 			Inner Join ( 				Select		ElementId 				From		CourseEvaluation_PropertyValues 				Where		PropertyName = 'Tag' 							And PropertyValue = 'Participation' 			) tags 				On tags.ElementId = pv.ElementId Group By	pv.ElementId ) list Where PersonID = @PersonID;  Insert Into @Return_Override(SectionID, TermCode, CourseCode, BeginDate, EndDate) Select		Max(Iif(pv.PropertyName = 'SectionDateSectionId', PropertyValue, Null)) as SectionID, 			Max(Iif(pv.PropertyName = 'SectionDateTerm', PropertyValue, Null)) as TermCode, 			Max(Iif(pv.PropertyName = 'SectionDateDescription', PropertyValue, Null)) as CourseCode, 			Max(Iif(pv.PropertyName = 'SectionDateEvaluationBeginDate', Cast(PropertyValue As date), Null)) as BeginDate, 			Max(Iif(pv.PropertyName = 'SectionDateEvaluationEndDate', Cast(PropertyValue As date), Null)) as EndDate From		CourseEvaluation_PropertyValues pv 			Inner Join ( 				Select		ElementId 				From		CourseEvaluation_PropertyValues 				Where		PropertyName = 'Tag' 							And PropertyValue = 'SectionDate' 			) tags 				On tags.ElementId = pv.ElementId Group By	pv.ElementId  Select * From @Return_Participation; Select * From @Return_Override;  /*  ParticipationCompletedOn ParticipationSectionId ParticipationStudentId ParticipationTeacherId ParticipationTerm  */ , DefaultValue = , IsTable = False, IsRequired = True, IsNullable = True, Size = , Table =  },
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: KEYWORD_DECLARE => ,
      Message: KEYWORD_DECLARE => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: VARIABLE => PersonID,
      Message: VARIABLE => PersonID,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_STRING => 10,
      Message: TYPE_STRING => 10,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_COMMA => ,
      Message: SYMBOL_COMMA => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: VARIABLE => Debug,
      Message: VARIABLE => Debug,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_BOOLEAN => ,
      Message: TYPE_BOOLEAN => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_EQUAL => ,
      Message: SYMBOL_EQUAL => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: LITERAL_NUMBER => 1,
      Message: LITERAL_NUMBER => 1,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: KEYWORD_SET => ,
      Message: KEYWORD_SET => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: VARIABLE => PersonID,
      Message: VARIABLE => PersonID,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_EQUAL => ,
      Message: SYMBOL_EQUAL => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: LITERAL_STRING => 0300996,
      Message: LITERAL_STRING => 0300996,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: KEYWORD_DECLARE => ,
      Message: KEYWORD_DECLARE => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: VARIABLE => Return_Participation,
      Message: VARIABLE => Return_Participation,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_TABLE => ,
      Message: TYPE_TABLE => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_LPREN => ,
      Message: SYMBOL_LPREN => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: IDENTIFIER => SectionID,
      Message: IDENTIFIER => SectionID,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_STRING => 20,
      Message: TYPE_STRING => 20,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_COMMA => ,
      Message: SYMBOL_COMMA => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: IDENTIFIER => PersonID,
      Message: IDENTIFIER => PersonID,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_STRING => 10,
      Message: TYPE_STRING => 10,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_COMMA => ,
      Message: SYMBOL_COMMA => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: IDENTIFIER => ProfessorID,
      Message: IDENTIFIER => ProfessorID,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_STRING => 10,
      Message: TYPE_STRING => 10,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_COMMA => ,
      Message: SYMBOL_COMMA => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: IDENTIFIER => TermCode,
      Message: IDENTIFIER => TermCode,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_STRING => 10,
      Message: TYPE_STRING => 10,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_COMMA => ,
      Message: SYMBOL_COMMA => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: IDENTIFIER => CompletedDate,
      Message: IDENTIFIER => CompletedDate,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_DATETIME => ,
      Message: TYPE_DATETIME => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_RPREN => ,
      Message: SYMBOL_RPREN => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: KEYWORD_DECLARE => ,
      Message: KEYWORD_DECLARE => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: VARIABLE => Return_Override,
      Message: VARIABLE => Return_Override,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_TABLE => ,
      Message: TYPE_TABLE => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_LPREN => ,
      Message: SYMBOL_LPREN => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: IDENTIFIER => SectionID,
      Message: IDENTIFIER => SectionID,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_STRING => 20,
      Message: TYPE_STRING => 20,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_COMMA => ,
      Message: SYMBOL_COMMA => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: IDENTIFIER => TermCode,
      Message: IDENTIFIER => TermCode,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_STRING => 10,
      Message: TYPE_STRING => 10,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_COMMA => ,
      Message: SYMBOL_COMMA => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: IDENTIFIER => CourseCode,
      Message: IDENTIFIER => CourseCode,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_STRING => 20,
      Message: TYPE_STRING => 20,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_COMMA => ,
      Message: SYMBOL_COMMA => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: IDENTIFIER => BeginDate,
      Message: IDENTIFIER => BeginDate,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_DATETIME => ,
      Message: TYPE_DATETIME => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_COMMA => ,
      Message: SYMBOL_COMMA => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: IDENTIFIER => EndDate,
      Message: IDENTIFIER => EndDate,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_DATETIME => ,
      Message: TYPE_DATETIME => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_RPREN => ,
      Message: SYMBOL_RPREN => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: KEYWORD_USE => ,
      Message: KEYWORD_USE => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: IDENTIFIER => DataRepositoryTest,
      Message: IDENTIFIER => DataRepositoryTest,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: INSERT_INTO_TABLE => Return_Participation,
      Message: INSERT_INTO_TABLE => Return_Participation,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: INSERT_INTO_TABLE => Return_Override,
      Message: INSERT_INTO_TABLE => Return_Override,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: BODY => Insert Into @Return_Participation Select * From ( Select		--pv.ElementId As ElementID, 			Max(Iif(pv.PropertyName = 'ParticipationSectionId', PropertyValue, Null)) as SectionID, 			Max(Iif(pv.PropertyName = 'ParticipationStudentId', PropertyValue, Null)) as PersonID, 			Max(Iif(pv.PropertyName = 'ParticipationTeacherId', PropertyValue, Null)) as ProfessorID, 			Max(Iif(pv.PropertyName = 'ParticipationTerm', PropertyValue, Null)) as TermCode, 			Max(Iif(pv.PropertyName = 'ParticipationCompletedOn', Cast(PropertyValue As datetime), Null)) as CompletedDate From		CourseEvaluation_PropertyValues pv 			Inner Join ( 				Select		ElementId 				From		CourseEvaluation_PropertyValues 				Where		PropertyName = 'Tag' 							And PropertyValue = 'Participation' 			) tags 				On tags.ElementId = pv.ElementId Group By	pv.ElementId ) list Where PersonID = @PersonID;  Insert Into @Return_Override Select		Max(Iif(pv.PropertyName = 'SectionDateSectionId', PropertyValue, Null)) as SectionID, 			Max(Iif(pv.PropertyName = 'SectionDateTerm', PropertyValue, Null)) as TermCode, 			Max(Iif(pv.PropertyName = 'SectionDateDescription', PropertyValue, Null)) as CourseCode, 			Max(Iif(pv.PropertyName = 'SectionDateEvaluationBeginDate', Cast(PropertyValue As date), Null)) as BeginDate, 			Max(Iif(pv.PropertyName = 'SectionDateEvaluationEndDate', Cast(PropertyValue As date), Null)) as EndDate From		CourseEvaluation_PropertyValues pv 			Inner Join ( 				Select		ElementId 				From		CourseEvaluation_PropertyValues 				Where		PropertyName = 'Tag' 							And PropertyValue = 'SectionDate' 			) tags 				On tags.ElementId = pv.ElementId Group By	pv.ElementId  Select * From @Return_Participation; Select * From @Return_Override;  /*  ParticipationCompletedOn ParticipationSectionId ParticipationStudentId ParticipationTeacherId ParticipationTerm  */,
      Message: BODY => Insert Into @Return_Participation Select * From ( Select		--pv.ElementId As ElementID, 			Max(Iif(pv.PropertyName = 'ParticipationSectionId', PropertyValue, Null)) as SectionID, 			Max(Iif(pv.PropertyName = 'ParticipationStudentId', PropertyValue, Null)) as PersonID, 			Max(Iif(pv.PropertyName = 'ParticipationTeacherId', PropertyValue, Null)) as ProfessorID, 			Max(Iif(pv.PropertyName = 'ParticipationTerm', PropertyValue, Null)) as TermCode, 			Max(Iif(pv.PropertyName = 'ParticipationCompletedOn', Cast(PropertyValue As datetime), Null)) as CompletedDate From		CourseEvaluation_PropertyValues pv 			Inner Join ( 				Select		ElementId 				From		CourseEvaluation_PropertyValues 				Where		PropertyName = 'Tag' 							And PropertyValue = 'Participation' 			) tags 				On tags.ElementId = pv.ElementId Group By	pv.ElementId ) list Where PersonID = @PersonID;  Insert Into @Return_Override Select		Max(Iif(pv.PropertyName = 'SectionDateSectionId', PropertyValue, Null)) as SectionID, 			Max(Iif(pv.PropertyName = 'SectionDateTerm', PropertyValue, Null)) as TermCode, 			Max(Iif(pv.PropertyName = 'SectionDateDescription', PropertyValue, Null)) as CourseCode, 			Max(Iif(pv.PropertyName = 'SectionDateEvaluationBeginDate', Cast(PropertyValue As date), Null)) as BeginDate, 			Max(Iif(pv.PropertyName = 'SectionDateEvaluationEndDate', Cast(PropertyValue As date), Null)) as EndDate From		CourseEvaluation_PropertyValues pv 			Inner Join ( 				Select		ElementId 				From		CourseEvaluation_PropertyValues 				Where		PropertyName = 'Tag' 							And PropertyValue = 'SectionDate' 			) tags 				On tags.ElementId = pv.ElementId Group By	pv.ElementId  Select * From @Return_Participation; Select * From @Return_Override;  /*  ParticipationCompletedOn ParticipationSectionId ParticipationStudentId ParticipationTeacherId ParticipationTerm  */,
      Category: Logger
    }
  ]
}