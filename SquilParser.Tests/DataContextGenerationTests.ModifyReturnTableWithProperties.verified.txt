{
  Diagnostics: [
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TestCase :: ModifyReturnTableWithPropertiesDataContext :: SQuiLDatabase :: ModifyReturnTableWithProperties :: Declare @Return_Courses table( 	EvalationID varchar(20), 	TermCode varchar(10), 	CourseCode varchar(20), 	CourseTitle varchar(100), 	ProfessorName varchar(100), 	EvaluationStatus varchar(50) );  Use BIWarehouse;  Insert Into @Return_Courses Select		Char(64 + sf.FacultyOrder) + Cast(sf.SectionFacultyID As varchar(10)), 			c.TermCode, c.CourseCode, c.CourseTitle, p.PreferredName, Case 				When @AsOfDate < t.BeginDate Then 'Opens On ' + Format(t.BeginDate, 'dddd, MMMM d') 				When @AsOfDate < t.EndDate Then 'Open Until ' + Format(t.EndDate, 'dddd, MMMM d') 				Else 'Closed On ' + Format(t.EndDate, 'dddd, MMMM d') 			End From		adm.SectionFaculty sf 			Inner Join pub.Person p 				On p.PersonID = sf.PersonID 			Inner Join @Courses c 				On c.SectionID = sf.SectionID 			Inner Join @Terms t 				On t.TermCode = c.TermCode;,
      Message: TestCase :: ModifyReturnTableWithPropertiesDataContext :: SQuiLDatabase :: ModifyReturnTableWithProperties :: Declare @Return_Courses table( 	EvalationID varchar(20), 	TermCode varchar(10), 	CourseCode varchar(20), 	CourseTitle varchar(100), 	ProfessorName varchar(100), 	EvaluationStatus varchar(50) );  Use BIWarehouse;  Insert Into @Return_Courses Select		Char(64 + sf.FacultyOrder) + Cast(sf.SectionFacultyID As varchar(10)), 			c.TermCode, c.CourseCode, c.CourseTitle, p.PreferredName, Case 				When @AsOfDate < t.BeginDate Then 'Opens On ' + Format(t.BeginDate, 'dddd, MMMM d') 				When @AsOfDate < t.EndDate Then 'Open Until ' + Format(t.EndDate, 'dddd, MMMM d') 				Else 'Closed On ' + Format(t.EndDate, 'dddd, MMMM d') 			End From		adm.SectionFaculty sf 			Inner Join pub.Person p 				On p.PersonID = sf.PersonID 			Inner Join @Courses c 				On c.SectionID = sf.SectionID 			Inner Join @Terms t 				On t.TermCode = c.TermCode;,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: CodeBlock { CodeType = OUTPUT_TABLE, DatabaseType = Token { Type = TYPE_TABLE, Offset = 0, Value = Courses, Original = @Return_Courses table }, Name = Courses, DefaultValue = , IsTable = True, IsRequired = False, IsNullable = False, Size = , Table = System.Collections.Generic.List`1[SquilParser.SourceGenerator.Parser.CodeItem] },
      Message: CodeBlock { CodeType = OUTPUT_TABLE, DatabaseType = Token { Type = TYPE_TABLE, Offset = 0, Value = Courses, Original = @Return_Courses table }, Name = Courses, DefaultValue = , IsTable = True, IsRequired = False, IsNullable = False, Size = , Table = System.Collections.Generic.List`1[SquilParser.SourceGenerator.Parser.CodeItem] },
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: CodeBlock { CodeType = USING, DatabaseType = Token { Type = IDENTIFIER, Offset = 208, Value = BIWarehouse, Original = BIWarehouse }, Name = BIWarehouse, DefaultValue = , IsTable = False, IsRequired = True, IsNullable = True, Size = , Table =  },
      Message: CodeBlock { CodeType = USING, DatabaseType = Token { Type = IDENTIFIER, Offset = 208, Value = BIWarehouse, Original = BIWarehouse }, Name = BIWarehouse, DefaultValue = , IsTable = False, IsRequired = True, IsNullable = True, Size = , Table =  },
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: CodeBlock { CodeType = BODY, DatabaseType = Token { Type = BODY, Offset = 224, Value = Insert Into @Return_Courses(EvalationID, TermCode, CourseCode, CourseTitle, ProfessorName, EvaluationStatus) Select		Char(64 + sf.FacultyOrder) + Cast(sf.SectionFacultyID As varchar(10)), 			c.TermCode, c.CourseCode, c.CourseTitle, p.PreferredName, Case 				When @AsOfDate < t.BeginDate Then 'Opens On ' + Format(t.BeginDate, 'dddd, MMMM d') 				When @AsOfDate < t.EndDate Then 'Open Until ' + Format(t.EndDate, 'dddd, MMMM d') 				Else 'Closed On ' + Format(t.EndDate, 'dddd, MMMM d') 			End From		adm.SectionFaculty sf 			Inner Join pub.Person p 				On p.PersonID = sf.PersonID 			Inner Join @Courses c 				On c.SectionID = sf.SectionID 			Inner Join @Terms t 				On t.TermCode = c.TermCode; , Original = Insert Into @Return_Courses Select		Char(64 + sf.FacultyOrder) + Cast(sf.SectionFacultyID As varchar(10)), 			c.TermCode, c.CourseCode, c.CourseTitle, p.PreferredName, Case 				When @AsOfDate < t.BeginDate Then 'Opens On ' + Format(t.BeginDate, 'dddd, MMMM d') 				When @AsOfDate < t.EndDate Then 'Open Until ' + Format(t.EndDate, 'dddd, MMMM d') 				Else 'Closed On ' + Format(t.EndDate, 'dddd, MMMM d') 			End From		adm.SectionFaculty sf 			Inner Join pub.Person p 				On p.PersonID = sf.PersonID 			Inner Join @Courses c 				On c.SectionID = sf.SectionID 			Inner Join @Terms t 				On t.TermCode = c.TermCode; }, Name = Insert Into @Return_Courses(EvalationID, TermCode, CourseCode, CourseTitle, ProfessorName, EvaluationStatus) Select		Char(64 + sf.FacultyOrder) + Cast(sf.SectionFacultyID As varchar(10)), 			c.TermCode, c.CourseCode, c.CourseTitle, p.PreferredName, Case 				When @AsOfDate < t.BeginDate Then 'Opens On ' + Format(t.BeginDate, 'dddd, MMMM d') 				When @AsOfDate < t.EndDate Then 'Open Until ' + Format(t.EndDate, 'dddd, MMMM d') 				Else 'Closed On ' + Format(t.EndDate, 'dddd, MMMM d') 			End From		adm.SectionFaculty sf 			Inner Join pub.Person p 				On p.PersonID = sf.PersonID 			Inner Join @Courses c 				On c.SectionID = sf.SectionID 			Inner Join @Terms t 				On t.TermCode = c.TermCode; , DefaultValue = , IsTable = False, IsRequired = True, IsNullable = True, Size = , Table =  },
      Message: CodeBlock { CodeType = BODY, DatabaseType = Token { Type = BODY, Offset = 224, Value = Insert Into @Return_Courses(EvalationID, TermCode, CourseCode, CourseTitle, ProfessorName, EvaluationStatus) Select		Char(64 + sf.FacultyOrder) + Cast(sf.SectionFacultyID As varchar(10)), 			c.TermCode, c.CourseCode, c.CourseTitle, p.PreferredName, Case 				When @AsOfDate < t.BeginDate Then 'Opens On ' + Format(t.BeginDate, 'dddd, MMMM d') 				When @AsOfDate < t.EndDate Then 'Open Until ' + Format(t.EndDate, 'dddd, MMMM d') 				Else 'Closed On ' + Format(t.EndDate, 'dddd, MMMM d') 			End From		adm.SectionFaculty sf 			Inner Join pub.Person p 				On p.PersonID = sf.PersonID 			Inner Join @Courses c 				On c.SectionID = sf.SectionID 			Inner Join @Terms t 				On t.TermCode = c.TermCode; , Original = Insert Into @Return_Courses Select		Char(64 + sf.FacultyOrder) + Cast(sf.SectionFacultyID As varchar(10)), 			c.TermCode, c.CourseCode, c.CourseTitle, p.PreferredName, Case 				When @AsOfDate < t.BeginDate Then 'Opens On ' + Format(t.BeginDate, 'dddd, MMMM d') 				When @AsOfDate < t.EndDate Then 'Open Until ' + Format(t.EndDate, 'dddd, MMMM d') 				Else 'Closed On ' + Format(t.EndDate, 'dddd, MMMM d') 			End From		adm.SectionFaculty sf 			Inner Join pub.Person p 				On p.PersonID = sf.PersonID 			Inner Join @Courses c 				On c.SectionID = sf.SectionID 			Inner Join @Terms t 				On t.TermCode = c.TermCode; }, Name = Insert Into @Return_Courses(EvalationID, TermCode, CourseCode, CourseTitle, ProfessorName, EvaluationStatus) Select		Char(64 + sf.FacultyOrder) + Cast(sf.SectionFacultyID As varchar(10)), 			c.TermCode, c.CourseCode, c.CourseTitle, p.PreferredName, Case 				When @AsOfDate < t.BeginDate Then 'Opens On ' + Format(t.BeginDate, 'dddd, MMMM d') 				When @AsOfDate < t.EndDate Then 'Open Until ' + Format(t.EndDate, 'dddd, MMMM d') 				Else 'Closed On ' + Format(t.EndDate, 'dddd, MMMM d') 			End From		adm.SectionFaculty sf 			Inner Join pub.Person p 				On p.PersonID = sf.PersonID 			Inner Join @Courses c 				On c.SectionID = sf.SectionID 			Inner Join @Terms t 				On t.TermCode = c.TermCode; , DefaultValue = , IsTable = False, IsRequired = True, IsNullable = True, Size = , Table =  },
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: KEYWORD_DECLARE => ,
      Message: KEYWORD_DECLARE => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: VARIABLE => Return_Courses,
      Message: VARIABLE => Return_Courses,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_TABLE => ,
      Message: TYPE_TABLE => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_LPREN => ,
      Message: SYMBOL_LPREN => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: IDENTIFIER => EvalationID,
      Message: IDENTIFIER => EvalationID,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_STRING => 20,
      Message: TYPE_STRING => 20,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_COMMA => ,
      Message: SYMBOL_COMMA => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: IDENTIFIER => TermCode,
      Message: IDENTIFIER => TermCode,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_STRING => 10,
      Message: TYPE_STRING => 10,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_COMMA => ,
      Message: SYMBOL_COMMA => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: IDENTIFIER => CourseCode,
      Message: IDENTIFIER => CourseCode,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_STRING => 20,
      Message: TYPE_STRING => 20,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_COMMA => ,
      Message: SYMBOL_COMMA => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: IDENTIFIER => CourseTitle,
      Message: IDENTIFIER => CourseTitle,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_STRING => 100,
      Message: TYPE_STRING => 100,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_COMMA => ,
      Message: SYMBOL_COMMA => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: IDENTIFIER => ProfessorName,
      Message: IDENTIFIER => ProfessorName,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_STRING => 100,
      Message: TYPE_STRING => 100,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_COMMA => ,
      Message: SYMBOL_COMMA => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: IDENTIFIER => EvaluationStatus,
      Message: IDENTIFIER => EvaluationStatus,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_STRING => 50,
      Message: TYPE_STRING => 50,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_RPREN => ,
      Message: SYMBOL_RPREN => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: KEYWORD_USE => ,
      Message: KEYWORD_USE => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: IDENTIFIER => BIWarehouse,
      Message: IDENTIFIER => BIWarehouse,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: INSERT_INTO_TABLE => Return_Courses,
      Message: INSERT_INTO_TABLE => Return_Courses,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: BODY => Insert Into @Return_Courses Select		Char(64 + sf.FacultyOrder) + Cast(sf.SectionFacultyID As varchar(10)), 			c.TermCode, c.CourseCode, c.CourseTitle, p.PreferredName, Case 				When @AsOfDate < t.BeginDate Then 'Opens On ' + Format(t.BeginDate, 'dddd, MMMM d') 				When @AsOfDate < t.EndDate Then 'Open Until ' + Format(t.EndDate, 'dddd, MMMM d') 				Else 'Closed On ' + Format(t.EndDate, 'dddd, MMMM d') 			End From		adm.SectionFaculty sf 			Inner Join pub.Person p 				On p.PersonID = sf.PersonID 			Inner Join @Courses c 				On c.SectionID = sf.SectionID 			Inner Join @Terms t 				On t.TermCode = c.TermCode;,
      Message: BODY => Insert Into @Return_Courses Select		Char(64 + sf.FacultyOrder) + Cast(sf.SectionFacultyID As varchar(10)), 			c.TermCode, c.CourseCode, c.CourseTitle, p.PreferredName, Case 				When @AsOfDate < t.BeginDate Then 'Opens On ' + Format(t.BeginDate, 'dddd, MMMM d') 				When @AsOfDate < t.EndDate Then 'Open Until ' + Format(t.EndDate, 'dddd, MMMM d') 				Else 'Closed On ' + Format(t.EndDate, 'dddd, MMMM d') 			End From		adm.SectionFaculty sf 			Inner Join pub.Person p 				On p.PersonID = sf.PersonID 			Inner Join @Courses c 				On c.SectionID = sf.SectionID 			Inner Join @Terms t 				On t.TermCode = c.TermCode;,
      Category: Logger
    }
  ]
}