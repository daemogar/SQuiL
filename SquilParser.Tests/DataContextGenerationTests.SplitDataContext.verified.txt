{
  Diagnostics: [
    {
      Id: SP0009,
      Title: Microsoft.Extensions.DependencyInjection.DLL Missing,
      Severity: Error,
      WarningLevel: 0,
      Location: : (0,0)-(0,0),
      MessageFormat: Add Microsoft.Extensions.DependencyInjection from NuGet to project.,
      Message: Add Microsoft.Extensions.DependencyInjection from NuGet to project.,
      Category: Design
    },
    {
      Id: SP0008,
      Title: Microsoft.Extensions.Configuration.DLL Missing,
      Severity: Error,
      WarningLevel: 0,
      Location: : (0,0)-(0,0),
      MessageFormat: Add Microsoft.Extensions.Configuration from NuGet to project.,
      Message: Add Microsoft.Extensions.Configuration from NuGet to project.,
      Category: Design
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TestCase :: ApplicationSpecificDataContext :: SQuiLDatabase :: QueriesExample :: Declare @RunAsOf date = GetDate(); -------------- Optional Non-nullable Parameter Declare @Sally table(Bob bit, Jim varchar(20), Sam int); Declare @Bob1 varchar(10); ------------------- Required Non-nullable Parameter Declare @Sally1 int; Declare @Sally2 date; Declare @Bob2 varchar(10) = Null; ------------ Optional Nullable Parameter Declare @Bob3 varchar(10) = ''; -------------- Optional Non-nullable Parameter Declare @EnvironmentName varchar(100) = 'Beta'; Declare @Debug bit = 1;  Insert Into @Sally Select 42;  Declare @Return int = Null; Declare @ReturnThis int = 13; Declare @Returns table(Bob int Null); ------------- First Returned Results As List of int? --Declare @Return{_1}? int; -------------------- Second Returned Result As Scalar Declare @Returns_Integer table(Bob int); ----- Third Returned Results As List of Integer Objects 											-- where Integer Objects have a property of Bob with a type of int Declare @Returns2 table(Bob int, Sally bit); -- Fourth Returned Results As List of AutoGenerated Object Declare @Return_That int;  Use [Database];  Insert Into @Returns2(Bob, Sally) Values (42, 1); Insert Into @Returns2 Values (12, 0);  Select @ReturnThis,
      Message: TestCase :: ApplicationSpecificDataContext :: SQuiLDatabase :: QueriesExample :: Declare @RunAsOf date = GetDate(); -------------- Optional Non-nullable Parameter Declare @Sally table(Bob bit, Jim varchar(20), Sam int); Declare @Bob1 varchar(10); ------------------- Required Non-nullable Parameter Declare @Sally1 int; Declare @Sally2 date; Declare @Bob2 varchar(10) = Null; ------------ Optional Nullable Parameter Declare @Bob3 varchar(10) = ''; -------------- Optional Non-nullable Parameter Declare @EnvironmentName varchar(100) = 'Beta'; Declare @Debug bit = 1;  Insert Into @Sally Select 42;  Declare @Return int = Null; Declare @ReturnThis int = 13; Declare @Returns table(Bob int Null); ------------- First Returned Results As List of int? --Declare @Return{_1}? int; -------------------- Second Returned Result As Scalar Declare @Returns_Integer table(Bob int); ----- Third Returned Results As List of Integer Objects 											-- where Integer Objects have a property of Bob with a type of int Declare @Returns2 table(Bob int, Sally bit); -- Fourth Returned Results As List of AutoGenerated Object Declare @Return_That int;  Use [Database];  Insert Into @Returns2(Bob, Sally) Values (42, 1); Insert Into @Returns2 Values (12, 0);  Select @ReturnThis,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: CodeBlock { CodeType = INPUT_ARGUMENT, DatabaseType = Token { Type = TYPE_DATE, Offset = 17, Value = , Original = @RunAsOf date }, Name = RunAsOf, DefaultValue = System.DateOnly.FromDateTime(System.DateTime.Now), IsTable = False, IsRequired = False, IsNullable = False, Size = , Table =  },
      Message: CodeBlock { CodeType = INPUT_ARGUMENT, DatabaseType = Token { Type = TYPE_DATE, Offset = 17, Value = , Original = @RunAsOf date }, Name = RunAsOf, DefaultValue = System.DateOnly.FromDateTime(System.DateTime.Now), IsTable = False, IsRequired = False, IsNullable = False, Size = , Table =  },
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: CodeBlock { CodeType = INPUT_TABLE, DatabaseType = Token { Type = TYPE_TABLE, Offset = 83, Value = Sally, Original = @Sally table }, Name = Sally, DefaultValue = , IsTable = True, IsRequired = False, IsNullable = False, Size = , Table = System.Collections.Generic.List`1[SquilParser.SourceGenerator.Parser.CodeItem] },
      Message: CodeBlock { CodeType = INPUT_TABLE, DatabaseType = Token { Type = TYPE_TABLE, Offset = 83, Value = Sally, Original = @Sally table }, Name = Sally, DefaultValue = , IsTable = True, IsRequired = False, IsNullable = False, Size = , Table = System.Collections.Generic.List`1[SquilParser.SourceGenerator.Parser.CodeItem] },
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: CodeBlock { CodeType = INPUT_ARGUMENT, DatabaseType = Token { Type = TYPE_STRING, Offset = 155, Value = Bob1, Original = @Bob1 varchar(10) }, Name = Bob1, DefaultValue = , IsTable = False, IsRequired = True, IsNullable = True, Size = 10, Table =  },
      Message: CodeBlock { CodeType = INPUT_ARGUMENT, DatabaseType = Token { Type = TYPE_STRING, Offset = 155, Value = Bob1, Original = @Bob1 varchar(10) }, Name = Bob1, DefaultValue = , IsTable = False, IsRequired = True, IsNullable = True, Size = 10, Table =  },
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: CodeBlock { CodeType = INPUT_ARGUMENT, DatabaseType = Token { Type = TYPE_INT, Offset = 237, Value = Sally1, Original = @Sally1 int }, Name = Sally1, DefaultValue = , IsTable = False, IsRequired = True, IsNullable = True, Size = , Table =  },
      Message: CodeBlock { CodeType = INPUT_ARGUMENT, DatabaseType = Token { Type = TYPE_INT, Offset = 237, Value = Sally1, Original = @Sally1 int }, Name = Sally1, DefaultValue = , IsTable = False, IsRequired = True, IsNullable = True, Size = , Table =  },
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: CodeBlock { CodeType = INPUT_ARGUMENT, DatabaseType = Token { Type = TYPE_DATE, Offset = 259, Value = Sally2, Original = @Sally2 date }, Name = Sally2, DefaultValue = , IsTable = False, IsRequired = True, IsNullable = True, Size = , Table =  },
      Message: CodeBlock { CodeType = INPUT_ARGUMENT, DatabaseType = Token { Type = TYPE_DATE, Offset = 259, Value = Sally2, Original = @Sally2 date }, Name = Sally2, DefaultValue = , IsTable = False, IsRequired = True, IsNullable = True, Size = , Table =  },
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: CodeBlock { CodeType = INPUT_ARGUMENT, DatabaseType = Token { Type = TYPE_STRING, Offset = 280, Value = 10, Original = @Bob2 varchar(10) }, Name = Bob2, DefaultValue = , IsTable = False, IsRequired = False, IsNullable = True, Size = 10, Table =  },
      Message: CodeBlock { CodeType = INPUT_ARGUMENT, DatabaseType = Token { Type = TYPE_STRING, Offset = 280, Value = 10, Original = @Bob2 varchar(10) }, Name = Bob2, DefaultValue = , IsTable = False, IsRequired = False, IsNullable = True, Size = 10, Table =  },
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: CodeBlock { CodeType = INPUT_ARGUMENT, DatabaseType = Token { Type = TYPE_STRING, Offset = 356, Value = 10, Original = @Bob3 varchar(10) }, Name = Bob3, DefaultValue = , IsTable = False, IsRequired = False, IsNullable = False, Size = 10, Table =  },
      Message: CodeBlock { CodeType = INPUT_ARGUMENT, DatabaseType = Token { Type = TYPE_STRING, Offset = 356, Value = 10, Original = @Bob3 varchar(10) }, Name = Bob3, DefaultValue = , IsTable = False, IsRequired = False, IsNullable = False, Size = 10, Table =  },
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: CodeBlock { CodeType = INPUT_ARGUMENT, DatabaseType = Token { Type = TYPE_STRING, Offset = 447, Value = 100, Original = @EnvironmentName varchar(100) }, Name = EnvironmentName, DefaultValue = Beta, IsTable = False, IsRequired = False, IsNullable = False, Size = 100, Table =  },
      Message: CodeBlock { CodeType = INPUT_ARGUMENT, DatabaseType = Token { Type = TYPE_STRING, Offset = 447, Value = 100, Original = @EnvironmentName varchar(100) }, Name = EnvironmentName, DefaultValue = Beta, IsTable = False, IsRequired = False, IsNullable = False, Size = 100, Table =  },
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: CodeBlock { CodeType = INPUT_ARGUMENT, DatabaseType = Token { Type = TYPE_BOOLEAN, Offset = 486, Value = , Original = @Debug bit }, Name = Debug, DefaultValue = 1, IsTable = False, IsRequired = False, IsNullable = False, Size = , Table =  },
      Message: CodeBlock { CodeType = INPUT_ARGUMENT, DatabaseType = Token { Type = TYPE_BOOLEAN, Offset = 486, Value = , Original = @Debug bit }, Name = Debug, DefaultValue = 1, IsTable = False, IsRequired = False, IsNullable = False, Size = , Table =  },
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: CodeBlock { CodeType = OUTPUT_VARIABLE, DatabaseType = Token { Type = TYPE_INT, Offset = 547, Value = , Original = @Return int }, Name = Result1, DefaultValue = , IsTable = False, IsRequired = False, IsNullable = True, Size = , Table =  },
      Message: CodeBlock { CodeType = OUTPUT_VARIABLE, DatabaseType = Token { Type = TYPE_INT, Offset = 547, Value = , Original = @Return int }, Name = Result1, DefaultValue = , IsTable = False, IsRequired = False, IsNullable = True, Size = , Table =  },
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: CodeBlock { CodeType = OUTPUT_VARIABLE, DatabaseType = Token { Type = TYPE_INT, Offset = 580, Value = , Original = @ReturnThis int }, Name = Result2, DefaultValue = 13, IsTable = False, IsRequired = False, IsNullable = False, Size = , Table =  },
      Message: CodeBlock { CodeType = OUTPUT_VARIABLE, DatabaseType = Token { Type = TYPE_INT, Offset = 580, Value = , Original = @ReturnThis int }, Name = Result2, DefaultValue = 13, IsTable = False, IsRequired = False, IsNullable = False, Size = , Table =  },
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: CodeBlock { CodeType = OUTPUT_TABLE, DatabaseType = Token { Type = TYPE_TABLE, Offset = 591, Value = Result3, Original = @Returns table }, Name = Result3, DefaultValue = , IsTable = True, IsRequired = False, IsNullable = False, Size = , Table = System.Collections.Generic.List`1[SquilParser.SourceGenerator.Parser.CodeItem] },
      Message: CodeBlock { CodeType = OUTPUT_TABLE, DatabaseType = Token { Type = TYPE_TABLE, Offset = 591, Value = Result3, Original = @Returns table }, Name = Result3, DefaultValue = , IsTable = True, IsRequired = False, IsNullable = False, Size = , Table = System.Collections.Generic.List`1[SquilParser.SourceGenerator.Parser.CodeItem] },
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: CodeBlock { CodeType = OUTPUT_TABLE, DatabaseType = Token { Type = TYPE_TABLE, Offset = 766, Value = Integer, Original = @Returns_Integer table }, Name = Integer, DefaultValue = , IsTable = True, IsRequired = False, IsNullable = False, Size = , Table = System.Collections.Generic.List`1[SquilParser.SourceGenerator.Parser.CodeItem] },
      Message: CodeBlock { CodeType = OUTPUT_TABLE, DatabaseType = Token { Type = TYPE_TABLE, Offset = 766, Value = Integer, Original = @Returns_Integer table }, Name = Integer, DefaultValue = , IsTable = True, IsRequired = False, IsNullable = False, Size = , Table = System.Collections.Generic.List`1[SquilParser.SourceGenerator.Parser.CodeItem] },
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: CodeBlock { CodeType = OUTPUT_TABLE, DatabaseType = Token { Type = TYPE_TABLE, Offset = 943, Value = Result4, Original = @Returns2 table }, Name = Result4, DefaultValue = , IsTable = True, IsRequired = False, IsNullable = False, Size = , Table = System.Collections.Generic.List`1[SquilParser.SourceGenerator.Parser.CodeItem] },
      Message: CodeBlock { CodeType = OUTPUT_TABLE, DatabaseType = Token { Type = TYPE_TABLE, Offset = 943, Value = Result4, Original = @Returns2 table }, Name = Result4, DefaultValue = , IsTable = True, IsRequired = False, IsNullable = False, Size = , Table = System.Collections.Generic.List`1[SquilParser.SourceGenerator.Parser.CodeItem] },
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: CodeBlock { CodeType = OUTPUT_VARIABLE, DatabaseType = Token { Type = TYPE_INT, Offset = 1069, Value = That, Original = @Return_That int }, Name = That, DefaultValue = , IsTable = False, IsRequired = True, IsNullable = True, Size = , Table =  },
      Message: CodeBlock { CodeType = OUTPUT_VARIABLE, DatabaseType = Token { Type = TYPE_INT, Offset = 1069, Value = That, Original = @Return_That int }, Name = That, DefaultValue = , IsTable = False, IsRequired = True, IsNullable = True, Size = , Table =  },
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: CodeBlock { CodeType = USING, DatabaseType = Token { Type = IDENTIFIER, Offset = 1081, Value = Database, Original = [Database] }, Name = Database, DefaultValue = , IsTable = False, IsRequired = True, IsNullable = True, Size = , Table =  },
      Message: CodeBlock { CodeType = USING, DatabaseType = Token { Type = IDENTIFIER, Offset = 1081, Value = Database, Original = [Database] }, Name = Database, DefaultValue = , IsTable = False, IsRequired = True, IsNullable = True, Size = , Table =  },
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: CodeBlock { CodeType = BODY, DatabaseType = Token { Type = BODY, Offset = 1096, Value = Insert Into @Returns2(Bob, Sally) Values (42, 1); Insert Into @Returns2(Bob, Sally) Values (12, 0);  Select 'ReturnThis' As [__SQuiL__Table__Type__], @ReturnThis  Select 'Return' As [__SQuiL__Table__Type__], @Return  Select 'Return_That' As [__SQuiL__Table__Type__], @Return_That , Original = Insert Into @Returns2(Bob, Sally) Values (42, 1); Insert Into @Returns2 Values (12, 0);  Select @ReturnThis }, Name = Insert Into @Returns2(Bob, Sally) Values (42, 1); Insert Into @Returns2(Bob, Sally) Values (12, 0);  Select 'ReturnThis' As [__SQuiL__Table__Type__], @ReturnThis  Select 'Return' As [__SQuiL__Table__Type__], @Return  Select 'Return_That' As [__SQuiL__Table__Type__], @Return_That , DefaultValue = , IsTable = False, IsRequired = True, IsNullable = True, Size = , Table =  },
      Message: CodeBlock { CodeType = BODY, DatabaseType = Token { Type = BODY, Offset = 1096, Value = Insert Into @Returns2(Bob, Sally) Values (42, 1); Insert Into @Returns2(Bob, Sally) Values (12, 0);  Select 'ReturnThis' As [__SQuiL__Table__Type__], @ReturnThis  Select 'Return' As [__SQuiL__Table__Type__], @Return  Select 'Return_That' As [__SQuiL__Table__Type__], @Return_That , Original = Insert Into @Returns2(Bob, Sally) Values (42, 1); Insert Into @Returns2 Values (12, 0);  Select @ReturnThis }, Name = Insert Into @Returns2(Bob, Sally) Values (42, 1); Insert Into @Returns2(Bob, Sally) Values (12, 0);  Select 'ReturnThis' As [__SQuiL__Table__Type__], @ReturnThis  Select 'Return' As [__SQuiL__Table__Type__], @Return  Select 'Return_That' As [__SQuiL__Table__Type__], @Return_That , DefaultValue = , IsTable = False, IsRequired = True, IsNullable = True, Size = , Table =  },
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: KEYWORD_DECLARE => ,
      Message: KEYWORD_DECLARE => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: VARIABLE => RunAsOf,
      Message: VARIABLE => RunAsOf,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_DATE => ,
      Message: TYPE_DATE => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_EQUAL => ,
      Message: SYMBOL_EQUAL => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_FUNCTIONS => GETDATE(),
      Message: TYPE_FUNCTIONS => GETDATE(),
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat:
COMMENT_SINGLELINE => -------------- Optional Non-nullable Parameter
,
      Message:
COMMENT_SINGLELINE => -------------- Optional Non-nullable Parameter
,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: KEYWORD_DECLARE => ,
      Message: KEYWORD_DECLARE => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: VARIABLE => Sally,
      Message: VARIABLE => Sally,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_TABLE => ,
      Message: TYPE_TABLE => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_LPREN => ,
      Message: SYMBOL_LPREN => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: IDENTIFIER => Bob,
      Message: IDENTIFIER => Bob,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_BOOLEAN => ,
      Message: TYPE_BOOLEAN => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_COMMA => ,
      Message: SYMBOL_COMMA => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: IDENTIFIER => Jim,
      Message: IDENTIFIER => Jim,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_STRING => 20,
      Message: TYPE_STRING => 20,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_COMMA => ,
      Message: SYMBOL_COMMA => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: IDENTIFIER => Sam,
      Message: IDENTIFIER => Sam,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_INT => ,
      Message: TYPE_INT => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_RPREN => ,
      Message: SYMBOL_RPREN => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: KEYWORD_DECLARE => ,
      Message: KEYWORD_DECLARE => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: VARIABLE => Bob1,
      Message: VARIABLE => Bob1,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_STRING => 10,
      Message: TYPE_STRING => 10,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat:
COMMENT_SINGLELINE => ------------------- Required Non-nullable Parameter
,
      Message:
COMMENT_SINGLELINE => ------------------- Required Non-nullable Parameter
,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: KEYWORD_DECLARE => ,
      Message: KEYWORD_DECLARE => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: VARIABLE => Sally1,
      Message: VARIABLE => Sally1,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_INT => ,
      Message: TYPE_INT => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: KEYWORD_DECLARE => ,
      Message: KEYWORD_DECLARE => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: VARIABLE => Sally2,
      Message: VARIABLE => Sally2,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_DATE => ,
      Message: TYPE_DATE => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: KEYWORD_DECLARE => ,
      Message: KEYWORD_DECLARE => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: VARIABLE => Bob2,
      Message: VARIABLE => Bob2,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_STRING => 10,
      Message: TYPE_STRING => 10,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_EQUAL => ,
      Message: SYMBOL_EQUAL => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: LITERAL_NULL => ,
      Message: LITERAL_NULL => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat:
COMMENT_SINGLELINE => ------------ Optional Nullable Parameter
,
      Message:
COMMENT_SINGLELINE => ------------ Optional Nullable Parameter
,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: KEYWORD_DECLARE => ,
      Message: KEYWORD_DECLARE => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: VARIABLE => Bob3,
      Message: VARIABLE => Bob3,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_STRING => 10,
      Message: TYPE_STRING => 10,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_EQUAL => ,
      Message: SYMBOL_EQUAL => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: LITERAL_STRING => ,
      Message: LITERAL_STRING => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat:
COMMENT_SINGLELINE => -------------- Optional Non-nullable Parameter
,
      Message:
COMMENT_SINGLELINE => -------------- Optional Non-nullable Parameter
,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: KEYWORD_DECLARE => ,
      Message: KEYWORD_DECLARE => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: VARIABLE => EnvironmentName,
      Message: VARIABLE => EnvironmentName,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_STRING => 100,
      Message: TYPE_STRING => 100,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_EQUAL => ,
      Message: SYMBOL_EQUAL => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: LITERAL_STRING => Beta,
      Message: LITERAL_STRING => Beta,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: KEYWORD_DECLARE => ,
      Message: KEYWORD_DECLARE => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: VARIABLE => Debug,
      Message: VARIABLE => Debug,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_BOOLEAN => ,
      Message: TYPE_BOOLEAN => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_EQUAL => ,
      Message: SYMBOL_EQUAL => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: LITERAL_NUMBER => 1,
      Message: LITERAL_NUMBER => 1,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: KEYWORD_INSERT => ,
      Message: KEYWORD_INSERT => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: KEYWORD_INTO => ,
      Message: KEYWORD_INTO => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: VARIABLE => Sally,
      Message: VARIABLE => Sally,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: IDENTIFIER => Select,
      Message: IDENTIFIER => Select,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: LITERAL_NUMBER => 42,
      Message: LITERAL_NUMBER => 42,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: KEYWORD_DECLARE => ,
      Message: KEYWORD_DECLARE => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: VARIABLE => Return,
      Message: VARIABLE => Return,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_INT => ,
      Message: TYPE_INT => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_EQUAL => ,
      Message: SYMBOL_EQUAL => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: LITERAL_NULL => ,
      Message: LITERAL_NULL => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: KEYWORD_DECLARE => ,
      Message: KEYWORD_DECLARE => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: VARIABLE => ReturnThis,
      Message: VARIABLE => ReturnThis,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_INT => ,
      Message: TYPE_INT => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_EQUAL => ,
      Message: SYMBOL_EQUAL => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: LITERAL_NUMBER => 13,
      Message: LITERAL_NUMBER => 13,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: KEYWORD_DECLARE => ,
      Message: KEYWORD_DECLARE => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: VARIABLE => Returns,
      Message: VARIABLE => Returns,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_TABLE => ,
      Message: TYPE_TABLE => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_LPREN => ,
      Message: SYMBOL_LPREN => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: IDENTIFIER => Bob,
      Message: IDENTIFIER => Bob,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_INT => ,
      Message: TYPE_INT => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: LITERAL_NULL => ,
      Message: LITERAL_NULL => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_RPREN => ,
      Message: SYMBOL_RPREN => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat:
COMMENT_SINGLELINE => ------------- First Returned Results As List of int?
,
      Message:
COMMENT_SINGLELINE => ------------- First Returned Results As List of int?
,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat:
COMMENT_SINGLELINE => --Declare @Return{_1}? int; -------------------- Second Returned Result As Scalar
,
      Message:
COMMENT_SINGLELINE => --Declare @Return{_1}? int; -------------------- Second Returned Result As Scalar
,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: KEYWORD_DECLARE => ,
      Message: KEYWORD_DECLARE => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: VARIABLE => Returns_Integer,
      Message: VARIABLE => Returns_Integer,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_TABLE => ,
      Message: TYPE_TABLE => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_LPREN => ,
      Message: SYMBOL_LPREN => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: IDENTIFIER => Bob,
      Message: IDENTIFIER => Bob,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_INT => ,
      Message: TYPE_INT => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_RPREN => ,
      Message: SYMBOL_RPREN => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat:
COMMENT_SINGLELINE => ----- Third Returned Results As List of Integer Objects
,
      Message:
COMMENT_SINGLELINE => ----- Third Returned Results As List of Integer Objects
,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat:
COMMENT_SINGLELINE => -- where Integer Objects have a property of Bob with a type of int
,
      Message:
COMMENT_SINGLELINE => -- where Integer Objects have a property of Bob with a type of int
,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: KEYWORD_DECLARE => ,
      Message: KEYWORD_DECLARE => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: VARIABLE => Returns2,
      Message: VARIABLE => Returns2,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_TABLE => ,
      Message: TYPE_TABLE => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_LPREN => ,
      Message: SYMBOL_LPREN => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: IDENTIFIER => Bob,
      Message: IDENTIFIER => Bob,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_INT => ,
      Message: TYPE_INT => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_COMMA => ,
      Message: SYMBOL_COMMA => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: IDENTIFIER => Sally,
      Message: IDENTIFIER => Sally,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_BOOLEAN => ,
      Message: TYPE_BOOLEAN => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_RPREN => ,
      Message: SYMBOL_RPREN => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat:
COMMENT_SINGLELINE => -- Fourth Returned Results As List of AutoGenerated Object
,
      Message:
COMMENT_SINGLELINE => -- Fourth Returned Results As List of AutoGenerated Object
,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: KEYWORD_DECLARE => ,
      Message: KEYWORD_DECLARE => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: VARIABLE => Return_That,
      Message: VARIABLE => Return_That,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_INT => ,
      Message: TYPE_INT => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: KEYWORD_USE => ,
      Message: KEYWORD_USE => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: IDENTIFIER => Database,
      Message: IDENTIFIER => Database,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: INSERT_INTO_TABLE => Returns2,
      Message: INSERT_INTO_TABLE => Returns2,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SELECT_VARIABLE => ReturnThis,
      Message: SELECT_VARIABLE => ReturnThis,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: BODY => Insert Into @Returns2(Bob, Sally) Values (42, 1); Insert Into @Returns2 Values (12, 0);  Select @ReturnThis,
      Message: BODY => Insert Into @Returns2(Bob, Sally) Values (42, 1); Insert Into @Returns2 Values (12, 0);  Select @ReturnThis,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TestCase :: ApplicationSpecificDataContext :: SQuiLDatabase :: QueriesGetStudentCoursesForEvaluation :: --GetStudentCoursesForEvaluation  Declare @RunAsOf date = '2008-10-01',--Null, 		@Debug bit = 0, 		@Development bit = 0;  Set @Development = 1;  Declare @People table(PersonID varchar(10)); Insert Into @People Values('0300996');  Use coll18_live;  If @RunAsOf Is Null Begin Set @RunAsOf = GetDate() End;  Begin -- Terms Table 	Declare @Terms table( 		POS int, IsCurrent bit, TermCode varchar(10), TermName varchar(100), 		TermBeginDate date, TermEndDate date, GradesDueDate date); 	Insert Into @Terms  	Select		Row_Number() Over (Order By DATEDIFF(day, @RunAsOf, t.TERM_START_DATE)) As POS, 				Iif(t.TERM_START_DATE <= @RunAsOf And t.TERM_END_DATE >= @RunAsOf, 1, 0) As IsCurrent, 				t.TERMS_ID As TermCode, TERM_DESC As TermName, 				TERM_START_DATE As TermBeginDate, TERM_END_DATE As TermEndDate, 				IsNull(ts.TERMX_GRADES_DUE_DATE_S67, DateAdd(week, 1, TERM_END_DATE)) 	From		TERMS t Inner Join TERMS_S67 ts On ts.TERMS_S67_ID = t.TERMS_ID 	Where		Len(t.TERMS_ID) = 3 	Order By	t.TERM_START_DATE; 	 	Declare @POS int = (Select POS From @Terms Where IsCurrent = 1); 	Delete From @Terms Where TermCode Not In (Select TermCode From @Terms t Where t.POS - @POS >= 0 And t.POS - @POS <= 1) End;  Begin -- Sections 	Declare	@Sections table(SectionID varchar(20), TermCode varchar(10), CourseBeginDate date, CourseEndDate date); 	Insert Into @Sections 	Select		cs.COURSE_SECTIONS_ID, cs.SEC_TERM, SEC_START_DATE, SEC_END_DATE 	From		COURSE_SECTIONS cs 				Inner Join @Terms t 					On t.TermCode = cs.SEC_TERM 				Inner Join COURSE_SECTIONS_LS csls 					On cs.COURSE_SECTIONS_ID = csls.COURSE_SECTIONS_ID 					And csls.POS = Iif(cs.SEC_ACAD_LEVEL = 'GR', 2, 1)  	/* Development */ 	Update		@Sections 	Set			CourseBeginDate = '2008-10-14', CourseEndDate = '2008-10-19' 	Where		SectionID = 19454 	/* Development */ End;  Select		PersonID As StudentID, 			IsNull(p.PREFERRED_NAME, IsNull(p.NICKNAME, p.FIRST_NAME) + ' ' + p.LAST_NAME) As StudentName, 			csf.COURSE_SEC_FACULTY_ID As EvaluationID, 			t.TermName, 			stac.STC_COURSE_NAME + ': ' + stac.STC_TITLE As CourseName, 			IsNull(f.PREFERRED_NAME, IsNull(f.NICKNAME, f.FIRST_NAME) + ' ' + f.LAST_NAME) As ProfessorName, 			t.TermBeginDate, 			t.TermEndDate, 			cs.CourseBeginDate, 			cs.CourseEndDate, 			t.GradesDueDate 			--'' As ' ', stac.STC_ACAD_LEVEL, cs.* From		@People 			Inner Join PERSON p 				On p.ID = PersonID 			Inner Join STUDENT_ACAD_CRED stac 				On stac.STC_PERSON_ID = PersonID 			Inner Join @Terms t 				On t.TermCode = stac.STC_TERM 			Inner Join STUDENT_COURSE_SEC scs 				On scs.STUDENT_COURSE_SEC_ID = stac.STC_STUDENT_COURSE_SEC 			Inner Join @Sections cs 				On cs.SectionID= scs.SCS_COURSE_SECTION 			Inner Join COURSE_SEC_FACULTY csf 				On csf.CSF_COURSE_SECTION = scs.SCS_COURSE_SECTION 			Inner Join PERSON f 				On f.ID = csf.CSF_FACULTY Order By	t.POS, stac.STC_TITLE; 	 If @Development = 1 Begin 	Select '@Variables' As 'DebugOutput', @RunAsOf As '@RunAsOf'; 	Select '@People' As 'DebugOutput', * From @People; 	Select '@Terms' As 'DebugOutput', * From @Terms; 	Select '@Sections' As 'DebugOutput', * From @Sections; End;  	/* Exec usp_CE_GetStudentCoursesForEvaluation 	@PersonID = '0300996', 	@RunAsOf = '2008-10-01', 	@Debug = 1; 	 Exec usp_CE_GetStudentCoursesForEvaluation 	@PersonID = '0510454',--'0501072', 	@RunAsOf = '2023-12-01', 	@Debug = 0; 	 Exec usp_CE_GetStudentCoursesForEvaluation 	@PersonID = '0501072', 	@RunAsOf = '2023-12-01', 	@Debug = 0; 	*/,
      Message: TestCase :: ApplicationSpecificDataContext :: SQuiLDatabase :: QueriesGetStudentCoursesForEvaluation :: --GetStudentCoursesForEvaluation  Declare @RunAsOf date = '2008-10-01',--Null, 		@Debug bit = 0, 		@Development bit = 0;  Set @Development = 1;  Declare @People table(PersonID varchar(10)); Insert Into @People Values('0300996');  Use coll18_live;  If @RunAsOf Is Null Begin Set @RunAsOf = GetDate() End;  Begin -- Terms Table 	Declare @Terms table( 		POS int, IsCurrent bit, TermCode varchar(10), TermName varchar(100), 		TermBeginDate date, TermEndDate date, GradesDueDate date); 	Insert Into @Terms  	Select		Row_Number() Over (Order By DATEDIFF(day, @RunAsOf, t.TERM_START_DATE)) As POS, 				Iif(t.TERM_START_DATE <= @RunAsOf And t.TERM_END_DATE >= @RunAsOf, 1, 0) As IsCurrent, 				t.TERMS_ID As TermCode, TERM_DESC As TermName, 				TERM_START_DATE As TermBeginDate, TERM_END_DATE As TermEndDate, 				IsNull(ts.TERMX_GRADES_DUE_DATE_S67, DateAdd(week, 1, TERM_END_DATE)) 	From		TERMS t Inner Join TERMS_S67 ts On ts.TERMS_S67_ID = t.TERMS_ID 	Where		Len(t.TERMS_ID) = 3 	Order By	t.TERM_START_DATE; 	 	Declare @POS int = (Select POS From @Terms Where IsCurrent = 1); 	Delete From @Terms Where TermCode Not In (Select TermCode From @Terms t Where t.POS - @POS >= 0 And t.POS - @POS <= 1) End;  Begin -- Sections 	Declare	@Sections table(SectionID varchar(20), TermCode varchar(10), CourseBeginDate date, CourseEndDate date); 	Insert Into @Sections 	Select		cs.COURSE_SECTIONS_ID, cs.SEC_TERM, SEC_START_DATE, SEC_END_DATE 	From		COURSE_SECTIONS cs 				Inner Join @Terms t 					On t.TermCode = cs.SEC_TERM 				Inner Join COURSE_SECTIONS_LS csls 					On cs.COURSE_SECTIONS_ID = csls.COURSE_SECTIONS_ID 					And csls.POS = Iif(cs.SEC_ACAD_LEVEL = 'GR', 2, 1)  	/* Development */ 	Update		@Sections 	Set			CourseBeginDate = '2008-10-14', CourseEndDate = '2008-10-19' 	Where		SectionID = 19454 	/* Development */ End;  Select		PersonID As StudentID, 			IsNull(p.PREFERRED_NAME, IsNull(p.NICKNAME, p.FIRST_NAME) + ' ' + p.LAST_NAME) As StudentName, 			csf.COURSE_SEC_FACULTY_ID As EvaluationID, 			t.TermName, 			stac.STC_COURSE_NAME + ': ' + stac.STC_TITLE As CourseName, 			IsNull(f.PREFERRED_NAME, IsNull(f.NICKNAME, f.FIRST_NAME) + ' ' + f.LAST_NAME) As ProfessorName, 			t.TermBeginDate, 			t.TermEndDate, 			cs.CourseBeginDate, 			cs.CourseEndDate, 			t.GradesDueDate 			--'' As ' ', stac.STC_ACAD_LEVEL, cs.* From		@People 			Inner Join PERSON p 				On p.ID = PersonID 			Inner Join STUDENT_ACAD_CRED stac 				On stac.STC_PERSON_ID = PersonID 			Inner Join @Terms t 				On t.TermCode = stac.STC_TERM 			Inner Join STUDENT_COURSE_SEC scs 				On scs.STUDENT_COURSE_SEC_ID = stac.STC_STUDENT_COURSE_SEC 			Inner Join @Sections cs 				On cs.SectionID= scs.SCS_COURSE_SECTION 			Inner Join COURSE_SEC_FACULTY csf 				On csf.CSF_COURSE_SECTION = scs.SCS_COURSE_SECTION 			Inner Join PERSON f 				On f.ID = csf.CSF_FACULTY Order By	t.POS, stac.STC_TITLE; 	 If @Development = 1 Begin 	Select '@Variables' As 'DebugOutput', @RunAsOf As '@RunAsOf'; 	Select '@People' As 'DebugOutput', * From @People; 	Select '@Terms' As 'DebugOutput', * From @Terms; 	Select '@Sections' As 'DebugOutput', * From @Sections; End;  	/* Exec usp_CE_GetStudentCoursesForEvaluation 	@PersonID = '0300996', 	@RunAsOf = '2008-10-01', 	@Debug = 1; 	 Exec usp_CE_GetStudentCoursesForEvaluation 	@PersonID = '0510454',--'0501072', 	@RunAsOf = '2023-12-01', 	@Debug = 0; 	 Exec usp_CE_GetStudentCoursesForEvaluation 	@PersonID = '0501072', 	@RunAsOf = '2023-12-01', 	@Debug = 0; 	*/,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: CodeBlock { CodeType = INPUT_ARGUMENT, DatabaseType = Token { Type = TYPE_DATE, Offset = 53, Value = , Original = @RunAsOf date }, Name = RunAsOf, DefaultValue = 2008-10-01, IsTable = False, IsRequired = False, IsNullable = False, Size = , Table =  },
      Message: CodeBlock { CodeType = INPUT_ARGUMENT, DatabaseType = Token { Type = TYPE_DATE, Offset = 53, Value = , Original = @RunAsOf date }, Name = RunAsOf, DefaultValue = 2008-10-01, IsTable = False, IsRequired = False, IsNullable = False, Size = , Table =  },
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: CodeBlock { CodeType = INPUT_ARGUMENT, DatabaseType = Token { Type = TYPE_BOOLEAN, Offset = 91, Value = , Original = @Debug bit }, Name = Debug, DefaultValue = 0, IsTable = False, IsRequired = False, IsNullable = False, Size = , Table =  },
      Message: CodeBlock { CodeType = INPUT_ARGUMENT, DatabaseType = Token { Type = TYPE_BOOLEAN, Offset = 91, Value = , Original = @Debug bit }, Name = Debug, DefaultValue = 0, IsTable = False, IsRequired = False, IsNullable = False, Size = , Table =  },
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: CodeBlock { CodeType = INPUT_ARGUMENT, DatabaseType = Token { Type = TYPE_BOOLEAN, Offset = 116, Value = , Original = @Development bit }, Name = Development, DefaultValue = 0, IsTable = False, IsRequired = False, IsNullable = False, Size = , Table =  },
      Message: CodeBlock { CodeType = INPUT_ARGUMENT, DatabaseType = Token { Type = TYPE_BOOLEAN, Offset = 116, Value = , Original = @Development bit }, Name = Development, DefaultValue = 0, IsTable = False, IsRequired = False, IsNullable = False, Size = , Table =  },
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: CodeBlock { CodeType = INPUT_TABLE, DatabaseType = Token { Type = TYPE_TABLE, Offset = 153, Value = People, Original = @People table }, Name = People, DefaultValue = , IsTable = True, IsRequired = False, IsNullable = False, Size = , Table = System.Collections.Generic.List`1[SquilParser.SourceGenerator.Parser.CodeItem] },
      Message: CodeBlock { CodeType = INPUT_TABLE, DatabaseType = Token { Type = TYPE_TABLE, Offset = 153, Value = People, Original = @People table }, Name = People, DefaultValue = , IsTable = True, IsRequired = False, IsNullable = False, Size = , Table = System.Collections.Generic.List`1[SquilParser.SourceGenerator.Parser.CodeItem] },
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: CodeBlock { CodeType = USING, DatabaseType = Token { Type = IDENTIFIER, Offset = 245, Value = coll18_live, Original = coll18_live }, Name = coll18_live, DefaultValue = , IsTable = False, IsRequired = True, IsNullable = True, Size = , Table =  },
      Message: CodeBlock { CodeType = USING, DatabaseType = Token { Type = IDENTIFIER, Offset = 245, Value = coll18_live, Original = coll18_live }, Name = coll18_live, DefaultValue = , IsTable = False, IsRequired = True, IsNullable = True, Size = , Table =  },
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: CodeBlock { CodeType = BODY, DatabaseType = Token { Type = BODY, Offset = 261, Value = If @RunAsOf Is Null Begin Set @RunAsOf = GetDate() End;  Begin -- Terms Table 	Declare @Terms table( 		POS int, IsCurrent bit, TermCode varchar(10), TermName varchar(100), 		TermBeginDate date, TermEndDate date, GradesDueDate date); 	Insert Into @Terms  	Select		Row_Number() Over (Order By DATEDIFF(day, @RunAsOf, t.TERM_START_DATE)) As POS, 				Iif(t.TERM_START_DATE <= @RunAsOf And t.TERM_END_DATE >= @RunAsOf, 1, 0) As IsCurrent, 				t.TERMS_ID As TermCode, TERM_DESC As TermName, 				TERM_START_DATE As TermBeginDate, TERM_END_DATE As TermEndDate, 				IsNull(ts.TERMX_GRADES_DUE_DATE_S67, DateAdd(week, 1, TERM_END_DATE)) 	From		TERMS t Inner Join TERMS_S67 ts On ts.TERMS_S67_ID = t.TERMS_ID 	Where		Len(t.TERMS_ID) = 3 	Order By	t.TERM_START_DATE; 	 	Declare @POS int = (Select POS From @Terms Where IsCurrent = 1); 	Delete From @Terms Where TermCode Not In (Select TermCode From @Terms t Where t.POS - @POS >= 0 And t.POS - @POS <= 1) End;  Begin -- Sections 	Declare	@Sections table(SectionID varchar(20), TermCode varchar(10), CourseBeginDate date, CourseEndDate date); 	Insert Into @Sections 	Select		cs.COURSE_SECTIONS_ID, cs.SEC_TERM, SEC_START_DATE, SEC_END_DATE 	From		COURSE_SECTIONS cs 				Inner Join @Terms t 					On t.TermCode = cs.SEC_TERM 				Inner Join COURSE_SECTIONS_LS csls 					On cs.COURSE_SECTIONS_ID = csls.COURSE_SECTIONS_ID 					And csls.POS = Iif(cs.SEC_ACAD_LEVEL = 'GR', 2, 1)  	/* Development */ 	Update		@Sections 	Set			CourseBeginDate = '2008-10-14', CourseEndDate = '2008-10-19' 	Where		SectionID = 19454 	/* Development */ End;  Select		PersonID As StudentID, 			IsNull(p.PREFERRED_NAME, IsNull(p.NICKNAME, p.FIRST_NAME) + ' ' + p.LAST_NAME) As StudentName, 			csf.COURSE_SEC_FACULTY_ID As EvaluationID, 			t.TermName, 			stac.STC_COURSE_NAME + ': ' + stac.STC_TITLE As CourseName, 			IsNull(f.PREFERRED_NAME, IsNull(f.NICKNAME, f.FIRST_NAME) + ' ' + f.LAST_NAME) As ProfessorName, 			t.TermBeginDate, 			t.TermEndDate, 			cs.CourseBeginDate, 			cs.CourseEndDate, 			t.GradesDueDate 			--'' As ' ', stac.STC_ACAD_LEVEL, cs.* From		@People 			Inner Join PERSON p 				On p.ID = PersonID 			Inner Join STUDENT_ACAD_CRED stac 				On stac.STC_PERSON_ID = PersonID 			Inner Join @Terms t 				On t.TermCode = stac.STC_TERM 			Inner Join STUDENT_COURSE_SEC scs 				On scs.STUDENT_COURSE_SEC_ID = stac.STC_STUDENT_COURSE_SEC 			Inner Join @Sections cs 				On cs.SectionID= scs.SCS_COURSE_SECTION 			Inner Join COURSE_SEC_FACULTY csf 				On csf.CSF_COURSE_SECTION = scs.SCS_COURSE_SECTION 			Inner Join PERSON f 				On f.ID = csf.CSF_FACULTY Order By	t.POS, stac.STC_TITLE; 	 If @Development = 1 Begin 	Select '@Variables' As 'DebugOutput', @RunAsOf As '@RunAsOf'; 	Select '@People' As 'DebugOutput', * From @People; 	Select '@Terms' As 'DebugOutput', * From @Terms; 	Select '@Sections' As 'DebugOutput', * From @Sections; End;  	/* Exec usp_CE_GetStudentCoursesForEvaluation 	@PersonID = '0300996', 	@RunAsOf = '2008-10-01', 	@Debug = 1; 	 Exec usp_CE_GetStudentCoursesForEvaluation 	@PersonID = '0510454',--'0501072', 	@RunAsOf = '2023-12-01', 	@Debug = 0; 	 Exec usp_CE_GetStudentCoursesForEvaluation 	@PersonID = '0501072', 	@RunAsOf = '2023-12-01', 	@Debug = 0; 	*/ , Original = If @RunAsOf Is Null Begin Set @RunAsOf = GetDate() End;  Begin -- Terms Table 	Declare @Terms table( 		POS int, IsCurrent bit, TermCode varchar(10), TermName varchar(100), 		TermBeginDate date, TermEndDate date, GradesDueDate date); 	Insert Into @Terms  	Select		Row_Number() Over (Order By DATEDIFF(day, @RunAsOf, t.TERM_START_DATE)) As POS, 				Iif(t.TERM_START_DATE <= @RunAsOf And t.TERM_END_DATE >= @RunAsOf, 1, 0) As IsCurrent, 				t.TERMS_ID As TermCode, TERM_DESC As TermName, 				TERM_START_DATE As TermBeginDate, TERM_END_DATE As TermEndDate, 				IsNull(ts.TERMX_GRADES_DUE_DATE_S67, DateAdd(week, 1, TERM_END_DATE)) 	From		TERMS t Inner Join TERMS_S67 ts On ts.TERMS_S67_ID = t.TERMS_ID 	Where		Len(t.TERMS_ID) = 3 	Order By	t.TERM_START_DATE; 	 	Declare @POS int = (Select POS From @Terms Where IsCurrent = 1); 	Delete From @Terms Where TermCode Not In (Select TermCode From @Terms t Where t.POS - @POS >= 0 And t.POS - @POS <= 1) End;  Begin -- Sections 	Declare	@Sections table(SectionID varchar(20), TermCode varchar(10), CourseBeginDate date, CourseEndDate date); 	Insert Into @Sections 	Select		cs.COURSE_SECTIONS_ID, cs.SEC_TERM, SEC_START_DATE, SEC_END_DATE 	From		COURSE_SECTIONS cs 				Inner Join @Terms t 					On t.TermCode = cs.SEC_TERM 				Inner Join COURSE_SECTIONS_LS csls 					On cs.COURSE_SECTIONS_ID = csls.COURSE_SECTIONS_ID 					And csls.POS = Iif(cs.SEC_ACAD_LEVEL = 'GR', 2, 1)  	/* Development */ 	Update		@Sections 	Set			CourseBeginDate = '2008-10-14', CourseEndDate = '2008-10-19' 	Where		SectionID = 19454 	/* Development */ End;  Select		PersonID As StudentID, 			IsNull(p.PREFERRED_NAME, IsNull(p.NICKNAME, p.FIRST_NAME) + ' ' + p.LAST_NAME) As StudentName, 			csf.COURSE_SEC_FACULTY_ID As EvaluationID, 			t.TermName, 			stac.STC_COURSE_NAME + ': ' + stac.STC_TITLE As CourseName, 			IsNull(f.PREFERRED_NAME, IsNull(f.NICKNAME, f.FIRST_NAME) + ' ' + f.LAST_NAME) As ProfessorName, 			t.TermBeginDate, 			t.TermEndDate, 			cs.CourseBeginDate, 			cs.CourseEndDate, 			t.GradesDueDate 			--'' As ' ', stac.STC_ACAD_LEVEL, cs.* From		@People 			Inner Join PERSON p 				On p.ID = PersonID 			Inner Join STUDENT_ACAD_CRED stac 				On stac.STC_PERSON_ID = PersonID 			Inner Join @Terms t 				On t.TermCode = stac.STC_TERM 			Inner Join STUDENT_COURSE_SEC scs 				On scs.STUDENT_COURSE_SEC_ID = stac.STC_STUDENT_COURSE_SEC 			Inner Join @Sections cs 				On cs.SectionID= scs.SCS_COURSE_SECTION 			Inner Join COURSE_SEC_FACULTY csf 				On csf.CSF_COURSE_SECTION = scs.SCS_COURSE_SECTION 			Inner Join PERSON f 				On f.ID = csf.CSF_FACULTY Order By	t.POS, stac.STC_TITLE; 	 If @Development = 1 Begin 	Select '@Variables' As 'DebugOutput', @RunAsOf As '@RunAsOf'; 	Select '@People' As 'DebugOutput', * From @People; 	Select '@Terms' As 'DebugOutput', * From @Terms; 	Select '@Sections' As 'DebugOutput', * From @Sections; End;  	/* Exec usp_CE_GetStudentCoursesForEvaluation 	@PersonID = '0300996', 	@RunAsOf = '2008-10-01', 	@Debug = 1; 	 Exec usp_CE_GetStudentCoursesForEvaluation 	@PersonID = '0510454',--'0501072', 	@RunAsOf = '2023-12-01', 	@Debug = 0; 	 Exec usp_CE_GetStudentCoursesForEvaluation 	@PersonID = '0501072', 	@RunAsOf = '2023-12-01', 	@Debug = 0; 	*/ }, Name = If @RunAsOf Is Null Begin Set @RunAsOf = GetDate() End;  Begin -- Terms Table 	Declare @Terms table( 		POS int, IsCurrent bit, TermCode varchar(10), TermName varchar(100), 		TermBeginDate date, TermEndDate date, GradesDueDate date); 	Insert Into @Terms  	Select		Row_Number() Over (Order By DATEDIFF(day, @RunAsOf, t.TERM_START_DATE)) As POS, 				Iif(t.TERM_START_DATE <= @RunAsOf And t.TERM_END_DATE >= @RunAsOf, 1, 0) As IsCurrent, 				t.TERMS_ID As TermCode, TERM_DESC As TermName, 				TERM_START_DATE As TermBeginDate, TERM_END_DATE As TermEndDate, 				IsNull(ts.TERMX_GRADES_DUE_DATE_S67, DateAdd(week, 1, TERM_END_DATE)) 	From		TERMS t Inner Join TERMS_S67 ts On ts.TERMS_S67_ID = t.TERMS_ID 	Where		Len(t.TERMS_ID) = 3 	Order By	t.TERM_START_DATE; 	 	Declare @POS int = (Select POS From @Terms Where IsCurrent = 1); 	Delete From @Terms Where TermCode Not In (Select TermCode From @Terms t Where t.POS - @POS >= 0 And t.POS - @POS <= 1) End;  Begin -- Sections 	Declare	@Sections table(SectionID varchar(20), TermCode varchar(10), CourseBeginDate date, CourseEndDate date); 	Insert Into @Sections 	Select		cs.COURSE_SECTIONS_ID, cs.SEC_TERM, SEC_START_DATE, SEC_END_DATE 	From		COURSE_SECTIONS cs 				Inner Join @Terms t 					On t.TermCode = cs.SEC_TERM 				Inner Join COURSE_SECTIONS_LS csls 					On cs.COURSE_SECTIONS_ID = csls.COURSE_SECTIONS_ID 					And csls.POS = Iif(cs.SEC_ACAD_LEVEL = 'GR', 2, 1)  	/* Development */ 	Update		@Sections 	Set			CourseBeginDate = '2008-10-14', CourseEndDate = '2008-10-19' 	Where		SectionID = 19454 	/* Development */ End;  Select		PersonID As StudentID, 			IsNull(p.PREFERRED_NAME, IsNull(p.NICKNAME, p.FIRST_NAME) + ' ' + p.LAST_NAME) As StudentName, 			csf.COURSE_SEC_FACULTY_ID As EvaluationID, 			t.TermName, 			stac.STC_COURSE_NAME + ': ' + stac.STC_TITLE As CourseName, 			IsNull(f.PREFERRED_NAME, IsNull(f.NICKNAME, f.FIRST_NAME) + ' ' + f.LAST_NAME) As ProfessorName, 			t.TermBeginDate, 			t.TermEndDate, 			cs.CourseBeginDate, 			cs.CourseEndDate, 			t.GradesDueDate 			--'' As ' ', stac.STC_ACAD_LEVEL, cs.* From		@People 			Inner Join PERSON p 				On p.ID = PersonID 			Inner Join STUDENT_ACAD_CRED stac 				On stac.STC_PERSON_ID = PersonID 			Inner Join @Terms t 				On t.TermCode = stac.STC_TERM 			Inner Join STUDENT_COURSE_SEC scs 				On scs.STUDENT_COURSE_SEC_ID = stac.STC_STUDENT_COURSE_SEC 			Inner Join @Sections cs 				On cs.SectionID= scs.SCS_COURSE_SECTION 			Inner Join COURSE_SEC_FACULTY csf 				On csf.CSF_COURSE_SECTION = scs.SCS_COURSE_SECTION 			Inner Join PERSON f 				On f.ID = csf.CSF_FACULTY Order By	t.POS, stac.STC_TITLE; 	 If @Development = 1 Begin 	Select '@Variables' As 'DebugOutput', @RunAsOf As '@RunAsOf'; 	Select '@People' As 'DebugOutput', * From @People; 	Select '@Terms' As 'DebugOutput', * From @Terms; 	Select '@Sections' As 'DebugOutput', * From @Sections; End;  	/* Exec usp_CE_GetStudentCoursesForEvaluation 	@PersonID = '0300996', 	@RunAsOf = '2008-10-01', 	@Debug = 1; 	 Exec usp_CE_GetStudentCoursesForEvaluation 	@PersonID = '0510454',--'0501072', 	@RunAsOf = '2023-12-01', 	@Debug = 0; 	 Exec usp_CE_GetStudentCoursesForEvaluation 	@PersonID = '0501072', 	@RunAsOf = '2023-12-01', 	@Debug = 0; 	*/ , DefaultValue = , IsTable = False, IsRequired = True, IsNullable = True, Size = , Table =  },
      Message: CodeBlock { CodeType = BODY, DatabaseType = Token { Type = BODY, Offset = 261, Value = If @RunAsOf Is Null Begin Set @RunAsOf = GetDate() End;  Begin -- Terms Table 	Declare @Terms table( 		POS int, IsCurrent bit, TermCode varchar(10), TermName varchar(100), 		TermBeginDate date, TermEndDate date, GradesDueDate date); 	Insert Into @Terms  	Select		Row_Number() Over (Order By DATEDIFF(day, @RunAsOf, t.TERM_START_DATE)) As POS, 				Iif(t.TERM_START_DATE <= @RunAsOf And t.TERM_END_DATE >= @RunAsOf, 1, 0) As IsCurrent, 				t.TERMS_ID As TermCode, TERM_DESC As TermName, 				TERM_START_DATE As TermBeginDate, TERM_END_DATE As TermEndDate, 				IsNull(ts.TERMX_GRADES_DUE_DATE_S67, DateAdd(week, 1, TERM_END_DATE)) 	From		TERMS t Inner Join TERMS_S67 ts On ts.TERMS_S67_ID = t.TERMS_ID 	Where		Len(t.TERMS_ID) = 3 	Order By	t.TERM_START_DATE; 	 	Declare @POS int = (Select POS From @Terms Where IsCurrent = 1); 	Delete From @Terms Where TermCode Not In (Select TermCode From @Terms t Where t.POS - @POS >= 0 And t.POS - @POS <= 1) End;  Begin -- Sections 	Declare	@Sections table(SectionID varchar(20), TermCode varchar(10), CourseBeginDate date, CourseEndDate date); 	Insert Into @Sections 	Select		cs.COURSE_SECTIONS_ID, cs.SEC_TERM, SEC_START_DATE, SEC_END_DATE 	From		COURSE_SECTIONS cs 				Inner Join @Terms t 					On t.TermCode = cs.SEC_TERM 				Inner Join COURSE_SECTIONS_LS csls 					On cs.COURSE_SECTIONS_ID = csls.COURSE_SECTIONS_ID 					And csls.POS = Iif(cs.SEC_ACAD_LEVEL = 'GR', 2, 1)  	/* Development */ 	Update		@Sections 	Set			CourseBeginDate = '2008-10-14', CourseEndDate = '2008-10-19' 	Where		SectionID = 19454 	/* Development */ End;  Select		PersonID As StudentID, 			IsNull(p.PREFERRED_NAME, IsNull(p.NICKNAME, p.FIRST_NAME) + ' ' + p.LAST_NAME) As StudentName, 			csf.COURSE_SEC_FACULTY_ID As EvaluationID, 			t.TermName, 			stac.STC_COURSE_NAME + ': ' + stac.STC_TITLE As CourseName, 			IsNull(f.PREFERRED_NAME, IsNull(f.NICKNAME, f.FIRST_NAME) + ' ' + f.LAST_NAME) As ProfessorName, 			t.TermBeginDate, 			t.TermEndDate, 			cs.CourseBeginDate, 			cs.CourseEndDate, 			t.GradesDueDate 			--'' As ' ', stac.STC_ACAD_LEVEL, cs.* From		@People 			Inner Join PERSON p 				On p.ID = PersonID 			Inner Join STUDENT_ACAD_CRED stac 				On stac.STC_PERSON_ID = PersonID 			Inner Join @Terms t 				On t.TermCode = stac.STC_TERM 			Inner Join STUDENT_COURSE_SEC scs 				On scs.STUDENT_COURSE_SEC_ID = stac.STC_STUDENT_COURSE_SEC 			Inner Join @Sections cs 				On cs.SectionID= scs.SCS_COURSE_SECTION 			Inner Join COURSE_SEC_FACULTY csf 				On csf.CSF_COURSE_SECTION = scs.SCS_COURSE_SECTION 			Inner Join PERSON f 				On f.ID = csf.CSF_FACULTY Order By	t.POS, stac.STC_TITLE; 	 If @Development = 1 Begin 	Select '@Variables' As 'DebugOutput', @RunAsOf As '@RunAsOf'; 	Select '@People' As 'DebugOutput', * From @People; 	Select '@Terms' As 'DebugOutput', * From @Terms; 	Select '@Sections' As 'DebugOutput', * From @Sections; End;  	/* Exec usp_CE_GetStudentCoursesForEvaluation 	@PersonID = '0300996', 	@RunAsOf = '2008-10-01', 	@Debug = 1; 	 Exec usp_CE_GetStudentCoursesForEvaluation 	@PersonID = '0510454',--'0501072', 	@RunAsOf = '2023-12-01', 	@Debug = 0; 	 Exec usp_CE_GetStudentCoursesForEvaluation 	@PersonID = '0501072', 	@RunAsOf = '2023-12-01', 	@Debug = 0; 	*/ , Original = If @RunAsOf Is Null Begin Set @RunAsOf = GetDate() End;  Begin -- Terms Table 	Declare @Terms table( 		POS int, IsCurrent bit, TermCode varchar(10), TermName varchar(100), 		TermBeginDate date, TermEndDate date, GradesDueDate date); 	Insert Into @Terms  	Select		Row_Number() Over (Order By DATEDIFF(day, @RunAsOf, t.TERM_START_DATE)) As POS, 				Iif(t.TERM_START_DATE <= @RunAsOf And t.TERM_END_DATE >= @RunAsOf, 1, 0) As IsCurrent, 				t.TERMS_ID As TermCode, TERM_DESC As TermName, 				TERM_START_DATE As TermBeginDate, TERM_END_DATE As TermEndDate, 				IsNull(ts.TERMX_GRADES_DUE_DATE_S67, DateAdd(week, 1, TERM_END_DATE)) 	From		TERMS t Inner Join TERMS_S67 ts On ts.TERMS_S67_ID = t.TERMS_ID 	Where		Len(t.TERMS_ID) = 3 	Order By	t.TERM_START_DATE; 	 	Declare @POS int = (Select POS From @Terms Where IsCurrent = 1); 	Delete From @Terms Where TermCode Not In (Select TermCode From @Terms t Where t.POS - @POS >= 0 And t.POS - @POS <= 1) End;  Begin -- Sections 	Declare	@Sections table(SectionID varchar(20), TermCode varchar(10), CourseBeginDate date, CourseEndDate date); 	Insert Into @Sections 	Select		cs.COURSE_SECTIONS_ID, cs.SEC_TERM, SEC_START_DATE, SEC_END_DATE 	From		COURSE_SECTIONS cs 				Inner Join @Terms t 					On t.TermCode = cs.SEC_TERM 				Inner Join COURSE_SECTIONS_LS csls 					On cs.COURSE_SECTIONS_ID = csls.COURSE_SECTIONS_ID 					And csls.POS = Iif(cs.SEC_ACAD_LEVEL = 'GR', 2, 1)  	/* Development */ 	Update		@Sections 	Set			CourseBeginDate = '2008-10-14', CourseEndDate = '2008-10-19' 	Where		SectionID = 19454 	/* Development */ End;  Select		PersonID As StudentID, 			IsNull(p.PREFERRED_NAME, IsNull(p.NICKNAME, p.FIRST_NAME) + ' ' + p.LAST_NAME) As StudentName, 			csf.COURSE_SEC_FACULTY_ID As EvaluationID, 			t.TermName, 			stac.STC_COURSE_NAME + ': ' + stac.STC_TITLE As CourseName, 			IsNull(f.PREFERRED_NAME, IsNull(f.NICKNAME, f.FIRST_NAME) + ' ' + f.LAST_NAME) As ProfessorName, 			t.TermBeginDate, 			t.TermEndDate, 			cs.CourseBeginDate, 			cs.CourseEndDate, 			t.GradesDueDate 			--'' As ' ', stac.STC_ACAD_LEVEL, cs.* From		@People 			Inner Join PERSON p 				On p.ID = PersonID 			Inner Join STUDENT_ACAD_CRED stac 				On stac.STC_PERSON_ID = PersonID 			Inner Join @Terms t 				On t.TermCode = stac.STC_TERM 			Inner Join STUDENT_COURSE_SEC scs 				On scs.STUDENT_COURSE_SEC_ID = stac.STC_STUDENT_COURSE_SEC 			Inner Join @Sections cs 				On cs.SectionID= scs.SCS_COURSE_SECTION 			Inner Join COURSE_SEC_FACULTY csf 				On csf.CSF_COURSE_SECTION = scs.SCS_COURSE_SECTION 			Inner Join PERSON f 				On f.ID = csf.CSF_FACULTY Order By	t.POS, stac.STC_TITLE; 	 If @Development = 1 Begin 	Select '@Variables' As 'DebugOutput', @RunAsOf As '@RunAsOf'; 	Select '@People' As 'DebugOutput', * From @People; 	Select '@Terms' As 'DebugOutput', * From @Terms; 	Select '@Sections' As 'DebugOutput', * From @Sections; End;  	/* Exec usp_CE_GetStudentCoursesForEvaluation 	@PersonID = '0300996', 	@RunAsOf = '2008-10-01', 	@Debug = 1; 	 Exec usp_CE_GetStudentCoursesForEvaluation 	@PersonID = '0510454',--'0501072', 	@RunAsOf = '2023-12-01', 	@Debug = 0; 	 Exec usp_CE_GetStudentCoursesForEvaluation 	@PersonID = '0501072', 	@RunAsOf = '2023-12-01', 	@Debug = 0; 	*/ }, Name = If @RunAsOf Is Null Begin Set @RunAsOf = GetDate() End;  Begin -- Terms Table 	Declare @Terms table( 		POS int, IsCurrent bit, TermCode varchar(10), TermName varchar(100), 		TermBeginDate date, TermEndDate date, GradesDueDate date); 	Insert Into @Terms  	Select		Row_Number() Over (Order By DATEDIFF(day, @RunAsOf, t.TERM_START_DATE)) As POS, 				Iif(t.TERM_START_DATE <= @RunAsOf And t.TERM_END_DATE >= @RunAsOf, 1, 0) As IsCurrent, 				t.TERMS_ID As TermCode, TERM_DESC As TermName, 				TERM_START_DATE As TermBeginDate, TERM_END_DATE As TermEndDate, 				IsNull(ts.TERMX_GRADES_DUE_DATE_S67, DateAdd(week, 1, TERM_END_DATE)) 	From		TERMS t Inner Join TERMS_S67 ts On ts.TERMS_S67_ID = t.TERMS_ID 	Where		Len(t.TERMS_ID) = 3 	Order By	t.TERM_START_DATE; 	 	Declare @POS int = (Select POS From @Terms Where IsCurrent = 1); 	Delete From @Terms Where TermCode Not In (Select TermCode From @Terms t Where t.POS - @POS >= 0 And t.POS - @POS <= 1) End;  Begin -- Sections 	Declare	@Sections table(SectionID varchar(20), TermCode varchar(10), CourseBeginDate date, CourseEndDate date); 	Insert Into @Sections 	Select		cs.COURSE_SECTIONS_ID, cs.SEC_TERM, SEC_START_DATE, SEC_END_DATE 	From		COURSE_SECTIONS cs 				Inner Join @Terms t 					On t.TermCode = cs.SEC_TERM 				Inner Join COURSE_SECTIONS_LS csls 					On cs.COURSE_SECTIONS_ID = csls.COURSE_SECTIONS_ID 					And csls.POS = Iif(cs.SEC_ACAD_LEVEL = 'GR', 2, 1)  	/* Development */ 	Update		@Sections 	Set			CourseBeginDate = '2008-10-14', CourseEndDate = '2008-10-19' 	Where		SectionID = 19454 	/* Development */ End;  Select		PersonID As StudentID, 			IsNull(p.PREFERRED_NAME, IsNull(p.NICKNAME, p.FIRST_NAME) + ' ' + p.LAST_NAME) As StudentName, 			csf.COURSE_SEC_FACULTY_ID As EvaluationID, 			t.TermName, 			stac.STC_COURSE_NAME + ': ' + stac.STC_TITLE As CourseName, 			IsNull(f.PREFERRED_NAME, IsNull(f.NICKNAME, f.FIRST_NAME) + ' ' + f.LAST_NAME) As ProfessorName, 			t.TermBeginDate, 			t.TermEndDate, 			cs.CourseBeginDate, 			cs.CourseEndDate, 			t.GradesDueDate 			--'' As ' ', stac.STC_ACAD_LEVEL, cs.* From		@People 			Inner Join PERSON p 				On p.ID = PersonID 			Inner Join STUDENT_ACAD_CRED stac 				On stac.STC_PERSON_ID = PersonID 			Inner Join @Terms t 				On t.TermCode = stac.STC_TERM 			Inner Join STUDENT_COURSE_SEC scs 				On scs.STUDENT_COURSE_SEC_ID = stac.STC_STUDENT_COURSE_SEC 			Inner Join @Sections cs 				On cs.SectionID= scs.SCS_COURSE_SECTION 			Inner Join COURSE_SEC_FACULTY csf 				On csf.CSF_COURSE_SECTION = scs.SCS_COURSE_SECTION 			Inner Join PERSON f 				On f.ID = csf.CSF_FACULTY Order By	t.POS, stac.STC_TITLE; 	 If @Development = 1 Begin 	Select '@Variables' As 'DebugOutput', @RunAsOf As '@RunAsOf'; 	Select '@People' As 'DebugOutput', * From @People; 	Select '@Terms' As 'DebugOutput', * From @Terms; 	Select '@Sections' As 'DebugOutput', * From @Sections; End;  	/* Exec usp_CE_GetStudentCoursesForEvaluation 	@PersonID = '0300996', 	@RunAsOf = '2008-10-01', 	@Debug = 1; 	 Exec usp_CE_GetStudentCoursesForEvaluation 	@PersonID = '0510454',--'0501072', 	@RunAsOf = '2023-12-01', 	@Debug = 0; 	 Exec usp_CE_GetStudentCoursesForEvaluation 	@PersonID = '0501072', 	@RunAsOf = '2023-12-01', 	@Debug = 0; 	*/ , DefaultValue = , IsTable = False, IsRequired = True, IsNullable = True, Size = , Table =  },
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat:
COMMENT_SINGLELINE => --GetStudentCoursesForEvaluation
,
      Message:
COMMENT_SINGLELINE => --GetStudentCoursesForEvaluation
,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: KEYWORD_DECLARE => ,
      Message: KEYWORD_DECLARE => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: VARIABLE => RunAsOf,
      Message: VARIABLE => RunAsOf,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_DATE => ,
      Message: TYPE_DATE => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_EQUAL => ,
      Message: SYMBOL_EQUAL => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: LITERAL_STRING => 2008-10-01,
      Message: LITERAL_STRING => 2008-10-01,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_COMMA => ,
      Message: SYMBOL_COMMA => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat:
COMMENT_SINGLELINE => --Null,
,
      Message:
COMMENT_SINGLELINE => --Null,
,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: VARIABLE => Debug,
      Message: VARIABLE => Debug,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_BOOLEAN => ,
      Message: TYPE_BOOLEAN => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_EQUAL => ,
      Message: SYMBOL_EQUAL => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: LITERAL_NUMBER => 0,
      Message: LITERAL_NUMBER => 0,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_COMMA => ,
      Message: SYMBOL_COMMA => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: VARIABLE => Development,
      Message: VARIABLE => Development,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_BOOLEAN => ,
      Message: TYPE_BOOLEAN => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_EQUAL => ,
      Message: SYMBOL_EQUAL => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: LITERAL_NUMBER => 0,
      Message: LITERAL_NUMBER => 0,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: KEYWORD_SET => ,
      Message: KEYWORD_SET => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: VARIABLE => Development,
      Message: VARIABLE => Development,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_EQUAL => ,
      Message: SYMBOL_EQUAL => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: LITERAL_NUMBER => 1,
      Message: LITERAL_NUMBER => 1,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: KEYWORD_DECLARE => ,
      Message: KEYWORD_DECLARE => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: VARIABLE => People,
      Message: VARIABLE => People,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_TABLE => ,
      Message: TYPE_TABLE => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_LPREN => ,
      Message: SYMBOL_LPREN => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: IDENTIFIER => PersonID,
      Message: IDENTIFIER => PersonID,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: TYPE_STRING => 10,
      Message: TYPE_STRING => 10,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_RPREN => ,
      Message: SYMBOL_RPREN => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: KEYWORD_INSERT => ,
      Message: KEYWORD_INSERT => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: KEYWORD_INTO => ,
      Message: KEYWORD_INTO => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: VARIABLE => People,
      Message: VARIABLE => People,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: KEYWORD_VALUES => ,
      Message: KEYWORD_VALUES => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_LPREN => ,
      Message: SYMBOL_LPREN => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: LITERAL_STRING => 0300996,
      Message: LITERAL_STRING => 0300996,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: SYMBOL_RPREN => ,
      Message: SYMBOL_RPREN => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: KEYWORD_USE => ,
      Message: KEYWORD_USE => ,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: IDENTIFIER => coll18_live,
      Message: IDENTIFIER => coll18_live,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: INSERT_INTO_TABLE => Terms,
      Message: INSERT_INTO_TABLE => Terms,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: INSERT_INTO_TABLE => Sections,
      Message: INSERT_INTO_TABLE => Sections,
      Category: Logger
    },
    {
      Id: SP0000,
      Title: Development Data,
      Severity: Warning,
      WarningLevel: 1,
      Location: : (0,0)-(0,0),
      MessageFormat: BODY => If @RunAsOf Is Null Begin Set @RunAsOf = GetDate() End;  Begin -- Terms Table 	Declare @Terms table( 		POS int, IsCurrent bit, TermCode varchar(10), TermName varchar(100), 		TermBeginDate date, TermEndDate date, GradesDueDate date); 	Insert Into @Terms  	Select		Row_Number() Over (Order By DATEDIFF(day, @RunAsOf, t.TERM_START_DATE)) As POS, 				Iif(t.TERM_START_DATE <= @RunAsOf And t.TERM_END_DATE >= @RunAsOf, 1, 0) As IsCurrent, 				t.TERMS_ID As TermCode, TERM_DESC As TermName, 				TERM_START_DATE As TermBeginDate, TERM_END_DATE As TermEndDate, 				IsNull(ts.TERMX_GRADES_DUE_DATE_S67, DateAdd(week, 1, TERM_END_DATE)) 	From		TERMS t Inner Join TERMS_S67 ts On ts.TERMS_S67_ID = t.TERMS_ID 	Where		Len(t.TERMS_ID) = 3 	Order By	t.TERM_START_DATE; 	 	Declare @POS int = (Select POS From @Terms Where IsCurrent = 1); 	Delete From @Terms Where TermCode Not In (Select TermCode From @Terms t Where t.POS - @POS >= 0 And t.POS - @POS <= 1) End;  Begin -- Sections 	Declare	@Sections table(SectionID varchar(20), TermCode varchar(10), CourseBeginDate date, CourseEndDate date); 	Insert Into @Sections 	Select		cs.COURSE_SECTIONS_ID, cs.SEC_TERM, SEC_START_DATE, SEC_END_DATE 	From		COURSE_SECTIONS cs 				Inner Join @Terms t 					On t.TermCode = cs.SEC_TERM 				Inner Join COURSE_SECTIONS_LS csls 					On cs.COURSE_SECTIONS_ID = csls.COURSE_SECTIONS_ID 					And csls.POS = Iif(cs.SEC_ACAD_LEVEL = 'GR', 2, 1)  	/* Development */ 	Update		@Sections 	Set			CourseBeginDate = '2008-10-14', CourseEndDate = '2008-10-19' 	Where		SectionID = 19454 	/* Development */ End;  Select		PersonID As StudentID, 			IsNull(p.PREFERRED_NAME, IsNull(p.NICKNAME, p.FIRST_NAME) + ' ' + p.LAST_NAME) As StudentName, 			csf.COURSE_SEC_FACULTY_ID As EvaluationID, 			t.TermName, 			stac.STC_COURSE_NAME + ': ' + stac.STC_TITLE As CourseName, 			IsNull(f.PREFERRED_NAME, IsNull(f.NICKNAME, f.FIRST_NAME) + ' ' + f.LAST_NAME) As ProfessorName, 			t.TermBeginDate, 			t.TermEndDate, 			cs.CourseBeginDate, 			cs.CourseEndDate, 			t.GradesDueDate 			--'' As ' ', stac.STC_ACAD_LEVEL, cs.* From		@People 			Inner Join PERSON p 				On p.ID = PersonID 			Inner Join STUDENT_ACAD_CRED stac 				On stac.STC_PERSON_ID = PersonID 			Inner Join @Terms t 				On t.TermCode = stac.STC_TERM 			Inner Join STUDENT_COURSE_SEC scs 				On scs.STUDENT_COURSE_SEC_ID = stac.STC_STUDENT_COURSE_SEC 			Inner Join @Sections cs 				On cs.SectionID= scs.SCS_COURSE_SECTION 			Inner Join COURSE_SEC_FACULTY csf 				On csf.CSF_COURSE_SECTION = scs.SCS_COURSE_SECTION 			Inner Join PERSON f 				On f.ID = csf.CSF_FACULTY Order By	t.POS, stac.STC_TITLE; 	 If @Development = 1 Begin 	Select '@Variables' As 'DebugOutput', @RunAsOf As '@RunAsOf'; 	Select '@People' As 'DebugOutput', * From @People; 	Select '@Terms' As 'DebugOutput', * From @Terms; 	Select '@Sections' As 'DebugOutput', * From @Sections; End;  	/* Exec usp_CE_GetStudentCoursesForEvaluation 	@PersonID = '0300996', 	@RunAsOf = '2008-10-01', 	@Debug = 1; 	 Exec usp_CE_GetStudentCoursesForEvaluation 	@PersonID = '0510454',--'0501072', 	@RunAsOf = '2023-12-01', 	@Debug = 0; 	 Exec usp_CE_GetStudentCoursesForEvaluation 	@PersonID = '0501072', 	@RunAsOf = '2023-12-01', 	@Debug = 0; 	*/,
      Message: BODY => If @RunAsOf Is Null Begin Set @RunAsOf = GetDate() End;  Begin -- Terms Table 	Declare @Terms table( 		POS int, IsCurrent bit, TermCode varchar(10), TermName varchar(100), 		TermBeginDate date, TermEndDate date, GradesDueDate date); 	Insert Into @Terms  	Select		Row_Number() Over (Order By DATEDIFF(day, @RunAsOf, t.TERM_START_DATE)) As POS, 				Iif(t.TERM_START_DATE <= @RunAsOf And t.TERM_END_DATE >= @RunAsOf, 1, 0) As IsCurrent, 				t.TERMS_ID As TermCode, TERM_DESC As TermName, 				TERM_START_DATE As TermBeginDate, TERM_END_DATE As TermEndDate, 				IsNull(ts.TERMX_GRADES_DUE_DATE_S67, DateAdd(week, 1, TERM_END_DATE)) 	From		TERMS t Inner Join TERMS_S67 ts On ts.TERMS_S67_ID = t.TERMS_ID 	Where		Len(t.TERMS_ID) = 3 	Order By	t.TERM_START_DATE; 	 	Declare @POS int = (Select POS From @Terms Where IsCurrent = 1); 	Delete From @Terms Where TermCode Not In (Select TermCode From @Terms t Where t.POS - @POS >= 0 And t.POS - @POS <= 1) End;  Begin -- Sections 	Declare	@Sections table(SectionID varchar(20), TermCode varchar(10), CourseBeginDate date, CourseEndDate date); 	Insert Into @Sections 	Select		cs.COURSE_SECTIONS_ID, cs.SEC_TERM, SEC_START_DATE, SEC_END_DATE 	From		COURSE_SECTIONS cs 				Inner Join @Terms t 					On t.TermCode = cs.SEC_TERM 				Inner Join COURSE_SECTIONS_LS csls 					On cs.COURSE_SECTIONS_ID = csls.COURSE_SECTIONS_ID 					And csls.POS = Iif(cs.SEC_ACAD_LEVEL = 'GR', 2, 1)  	/* Development */ 	Update		@Sections 	Set			CourseBeginDate = '2008-10-14', CourseEndDate = '2008-10-19' 	Where		SectionID = 19454 	/* Development */ End;  Select		PersonID As StudentID, 			IsNull(p.PREFERRED_NAME, IsNull(p.NICKNAME, p.FIRST_NAME) + ' ' + p.LAST_NAME) As StudentName, 			csf.COURSE_SEC_FACULTY_ID As EvaluationID, 			t.TermName, 			stac.STC_COURSE_NAME + ': ' + stac.STC_TITLE As CourseName, 			IsNull(f.PREFERRED_NAME, IsNull(f.NICKNAME, f.FIRST_NAME) + ' ' + f.LAST_NAME) As ProfessorName, 			t.TermBeginDate, 			t.TermEndDate, 			cs.CourseBeginDate, 			cs.CourseEndDate, 			t.GradesDueDate 			--'' As ' ', stac.STC_ACAD_LEVEL, cs.* From		@People 			Inner Join PERSON p 				On p.ID = PersonID 			Inner Join STUDENT_ACAD_CRED stac 				On stac.STC_PERSON_ID = PersonID 			Inner Join @Terms t 				On t.TermCode = stac.STC_TERM 			Inner Join STUDENT_COURSE_SEC scs 				On scs.STUDENT_COURSE_SEC_ID = stac.STC_STUDENT_COURSE_SEC 			Inner Join @Sections cs 				On cs.SectionID= scs.SCS_COURSE_SECTION 			Inner Join COURSE_SEC_FACULTY csf 				On csf.CSF_COURSE_SECTION = scs.SCS_COURSE_SECTION 			Inner Join PERSON f 				On f.ID = csf.CSF_FACULTY Order By	t.POS, stac.STC_TITLE; 	 If @Development = 1 Begin 	Select '@Variables' As 'DebugOutput', @RunAsOf As '@RunAsOf'; 	Select '@People' As 'DebugOutput', * From @People; 	Select '@Terms' As 'DebugOutput', * From @Terms; 	Select '@Sections' As 'DebugOutput', * From @Sections; End;  	/* Exec usp_CE_GetStudentCoursesForEvaluation 	@PersonID = '0300996', 	@RunAsOf = '2008-10-01', 	@Debug = 1; 	 Exec usp_CE_GetStudentCoursesForEvaluation 	@PersonID = '0510454',--'0501072', 	@RunAsOf = '2023-12-01', 	@Debug = 0; 	 Exec usp_CE_GetStudentCoursesForEvaluation 	@PersonID = '0501072', 	@RunAsOf = '2023-12-01', 	@Debug = 0; 	*/,
      Category: Logger
    }
  ]
}