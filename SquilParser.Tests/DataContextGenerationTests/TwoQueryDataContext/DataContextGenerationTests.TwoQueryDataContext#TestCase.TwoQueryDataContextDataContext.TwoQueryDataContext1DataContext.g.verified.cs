//HintName: TestCase.TwoQueryDataContextDataContext.TwoQueryDataContext1DataContext.g.cs
// <auto-generated />

#nullable enable

using Microsoft.Data.SqlClient;

using SQuiL;

namespace TestCase;

partial class TwoQueryDataContextDataContext : SQuiLBaseDataContext
{
	public async Task<TwoQueryDataContext1Response> ProcessTwoQueryDataContext1Async(
		TwoQueryDataContext1Request request,
		CancellationToken cancellationToken = default!)
	{
		var builder = ConnectionStringBuilder("ConnectionStringTwoQueryDataContext1");
		using SqlConnection connection = new(builder.ConnectionString);
		var command = connection.CreateCommand();
		
		List<SqlParameter> parameters = new()
		{
			new("EnvironmentName", System.Data.SqlDbType.VarChar, EnvironmentName.Length) { Value = EnvironmentName }, 
			new("Debug", System.Data.SqlDbType.Bit) { Value = EnvironmentName != "Production" }, 
		});
		
		command.CommandText = Query(parameters);
		command.Parameters.AddRange(parameters);
		
		await connection.OpenAsync(cancellationToken);
		
		await command.ExecuteNonQueryAsync(cancellationToken)
		
		return new();
		
		string Query(List<SqlParameter> parameters) => $"""
		Use [{builder.InitialCatalog}];
		
		Select 1
		
		""";
	}
}
