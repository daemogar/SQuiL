# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Publish SQuiL

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  PROJECT: SQuiL
  DIRECTORY: SquilParser.SourceGenerator

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout Source
      uses: actions/checkout@v4.1.1

    - name: Git Fetch
      run: git fetch --prune --unshallow
    
    - name: Setup DotNet
      uses: actions/setup-dotnet@v4.0.0
      with:
        dotnet-version: 8.0.x
        
    - name: Restore Dependencies
      working-directory: ./${{ env.DIRECTORY }}
      run: dotnet restore
        
    - name: Build ${{ env.PROJECT }}
      working-directory: ./${{ env.DIRECTORY }}
      run: dotnet build --no-restore -c Release
      
    - name: Set DotNet Version
      run: echo "DOTNET=$(dotnet --version)" >> "$GITHUB_ENV"
     
    - name: Set Build Number
      run: echo "BUILD=$(printf '%04d' ${{ github.run_number }})" >> "$GITHUB_ENV"

    - name: Set Release Version
      run: echo "VERSION=${{ env.DOTNET }}-beta.${{ env.BUILD }}" >> "$GITHUB_ENV"
      
    - name: Create Release
      uses: ncipollo/release-action@v1.14.0
      with:
        tag: ${{ env.VERSION }}
        name: ${{ env.VERSION }}
        token: ${{ secrets.GITHUB_TOKEN }}
        draft: false
        prerelease: true
        artifactErrorsFailBuild: true
        
    - name: Pack ${{ env.PROJECT }}.SourceGenerator
      env:
        RELEASE_NOTE: https://github.com/daemogar/${{ env.PROJECT }}/releases/tag/${{ env.VERSION }}
      working-directory: ./${{ env.DIRECTORY }}
      run: dotnet pack --no-build -c Release --include-symbols -p:SymbolPackageFormat=snupkg /p:Version=${{ env.VERSION }} /p:PackageReleaseNotes="See ${{ env.RELEASE_NOTE }}"

    - name: Push Nuget
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
      working-directory: ./${{ env.DIRECTORY }}
      run: dotnet nuget push **/*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json
      
