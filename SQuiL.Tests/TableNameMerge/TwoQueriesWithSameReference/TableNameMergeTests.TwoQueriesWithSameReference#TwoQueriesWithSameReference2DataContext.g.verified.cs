//HintName: TwoQueriesWithSameReference2DataContext.g.cs
// <auto-generated />

#nullable enable

using Microsoft.Data.SqlClient;

using SQuiL;

namespace TestCase;

partial class TwoQueriesWithSameReferenceDataContext : SQuiLBaseDataContext
{
	public async Task<TwoQueriesWithSameReference2Response> ProcessTwoQueriesWithSameReference2Async(
		TwoQueriesWithSameReference2Request request,
		CancellationToken cancellationToken = default!)
	{
		var builder = ConnectionStringBuilder("SQuiLDatabase");
		using SqlConnection connection = new(builder.ConnectionString);
		var command = connection.CreateCommand();
		
		List<SqlParameter> parameters = new()
		{
			new("@EnvironmentName", System.Data.SqlDbType.VarChar, EnvironmentName.Length) { Value = EnvironmentName }, 
			new("@Debug", System.Data.SqlDbType.Bit) { Value = EnvironmentName != "Production" }, 
		});
		
		command.CommandText = Query(parameters);
		command.Parameters.AddRange(parameters.ToArray());
		
		await connection.OpenAsync(cancellationToken);
		
		await command.ExecuteNonQueryAsync(cancellationToken);
		
		return new();
		
		string inputQuestion(List<SqlParameter> parameters)
		{
			System.Text.StringBuilder query = new();
			query.Append("Insert Into @Param_Question(Number, Message)");
			
			if (request.Question is null)
				throw new NullReferenceException(
					"TwoQueriesWithSameReference2Request is missing the required property Question.");
			
			query.AppendLine();
			query.Append("Values (");
			
			AddParams(query, parameters, 0, "ParamQuestion", "Number", System.Data.SqlDbType.BigInt, request.Question.Number);
			query.Append(", ");
			AddParams(query, parameters, 0, "ParamQuestion", "Message", System.Data.SqlDbType.VarChar, request.Question.Message, 4096);
			
			query.Append(')');
			query.AppendLine(";");
			query.AppendLine();
			
			return query.ToString();
		}
		
		string Query(List<SqlParameter> parameters) => $"""
		Declare @Param_Question table(
			[__SQuiL__Table__Type__Param_Question__] varchar(max) default('Param_Question'),
			[Number] int,
			[Message] varchar(max));
		{inputQuestion(parameters)}
		
		Use [{builder.InitialCatalog}];
		
		Select * From @Param_Question;
		
		""";
	}
}
