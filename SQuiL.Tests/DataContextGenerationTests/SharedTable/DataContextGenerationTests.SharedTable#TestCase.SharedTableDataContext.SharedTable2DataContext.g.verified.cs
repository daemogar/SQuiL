//HintName: TestCase.SharedTableDataContext.SharedTable2DataContext.g.cs
// <auto-generated />

#nullable enable

using Microsoft.Data.SqlClient;

using SQuiL;

namespace TestCase;

partial class SharedTableDataContext : SQuiLBaseDataContext
{
	public async Task<SharedTable2Response> ProcessSharedTable2Async(
		SharedTable2Request request,
		CancellationToken cancellationToken = default!)
	{
		var builder = ConnectionStringBuilder("SQuiLDatabase");
		using SqlConnection connection = new(builder.ConnectionString);
		var command = connection.CreateCommand();
		command.CommandText = Query();
		command.Parameters.AddRange(new SqlParameter[]
		{
			new("EnvironmentName", System.Data.SqlDbType.VarChar, EnvironmentName.Length) { Value = EnvironmentName }, 
			new("Debug", System.Data.SqlDbType.Bit) { Value = EnvironmentName != "Production" }, 
		});
		
		await connection.OpenAsync(cancellationToken);
		
		SharedTable2Response response = new();
		var isSally = false;
		
		using var reader = await command.ExecuteReaderAsync(cancellationToken);
		
		do
		{
			var tableTag = reader.GetName(0);
			if(tableTag.StartsWith("__SQuiL__Table__Type__"))
			{
				switch (tableTag)
				{
					case "__SQuiL__Table__Type__Return_Sally__":
					{
						isSally = true;
						
						if (!await reader.ReadAsync(cancellationToken)) break;
						
						var indexID = reader.GetOrdinal("ID");
						
						do
						{
							if(reader.GetString(0) == "Return_Sally")
							{
								response.Sally.Add(new(
									reader.GetInt32(indexID)));
							}
						}
						while(await reader.ReadAsync(cancellationToken));
						break;
						
					}
					//default: throw new Exception($"Invalid Table `{reader.GetString(0)}`");
				}
			}
		}
		while (await reader.NextResultAsync(cancellationToken));
		
		if (!isSally) throw new Exception("Expected return table `Sally`)");
		
		return response;
		
		string Query() => $"""
		Declare @Return_Sally table(
			[__SQuiL__Table__Type__Return_Sally__] varchar(max) default('Return_Sally'),
			ID int);
		
		Use [{builder.InitialCatalog}];
		
		Select 2;
		
		""";
	}
}
