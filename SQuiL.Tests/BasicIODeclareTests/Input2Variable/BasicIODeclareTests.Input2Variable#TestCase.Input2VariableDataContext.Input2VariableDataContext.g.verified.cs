//HintName: TestCase.Input2VariableDataContext.Input2VariableDataContext.g.cs
// <auto-generated />

#nullable enable

using Microsoft.Data.SqlClient;

using SQuiL;

namespace TestCase;

partial class Input2VariableDataContext : SQuiLBaseDataContext
{
	public async Task<Input2VariableResponse> ProcessInput2VariableAsync(
		Input2VariableRequest request,
		CancellationToken cancellationToken = default!)
	{
		var builder = ConnectionStringBuilder("SQuiLDatabase");
		using SqlConnection connection = new(builder.ConnectionString);
		var command = connection.CreateCommand();
		
		List<SqlParameter> parameters = new()
		{
			new("EnvironmentName", System.Data.SqlDbType.VarChar, EnvironmentName.Length) { Value = EnvironmentName }, 
			new("Debug", System.Data.SqlDbType.Bit) { Value = EnvironmentName != "Production" }, 
		});
		
		command.CommandText = Query(parameters);
		command.Parameters.AddRange(parameters);
		
		await connection.OpenAsync(cancellationToken);
		
		await command.ExecuteNonQueryAsync(cancellationToken)
		
		return new();
		
		string inputObject(List<SqlParameter> parameters)
		{
			System.Text.StringBuilder query = new();
			query.Append("Insert Into @Param_Object(ObjectID, IsMale, FirstName)");
			
			if (request.Object is null) return "";
			
			query.AppendLine();
			query.Append("Values (");
			
			AddParams(query, parameters, 0, "ParamObject", "ObjectID", System.Data.SqlDbType.BigInt, request.Object.ObjectID);
			query.Append(", ");
			AddParams(query, parameters, 0, "ParamObject", "IsMale", System.Data.SqlDbType.Bit, request.Object.IsMale);
			query.Append(", ");
			AddParams(query, parameters, 0, "ParamObject", "FirstName", System.Data.SqlDbType.VarChar, request.Object.FirstName, 100);
			
			query.Append(')');
			query.AppendLine(';');
			query.AppendLine();
			
			return query.ToString();
		}
		
		string Query(List<SqlParameter> parameters) => $"""
		Declare @Param_Object table(
			[__SQuiL__Table__Type__Param_Object__] varchar(max) default('Param_Object'),
			ObjectID int,
			IsMale bit,
			FirstName varchar(100));
		{inputObject(parameters)}
		
		Use [{builder.InitialCatalog}];
		
		Select 1;
		
		""";
	}
}
